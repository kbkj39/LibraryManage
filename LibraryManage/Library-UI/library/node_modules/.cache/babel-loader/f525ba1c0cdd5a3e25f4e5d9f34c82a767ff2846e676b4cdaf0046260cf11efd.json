{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/images/图书馆.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e81655e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  style: {\n    \"display\": \"inline-block\"\n  },\n  \"width:\": \"\",\n  \"50px;\": \"\",\n  \"height:\": \"\",\n  \"50px\": \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"title\"\n};\nconst _hoisted_5 = {\n  class: \"main\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"h1\", _hoisted_4, _toDisplayString($setup.title), 1 /* TEXT */), _createCommentVNode(\" 使用动态数据绑定 \"), _createElementVNode(\"div\", {\n    class: \"identity-switch\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.switchToReader\n  }, \"切换到读者\"), _createElementVNode(\"button\", {\n    onClick: $setup.switchToAdmin\n  }, \"切换到管理员\")])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode($setup[\"SwitchView\"]), _createVNode($setup[\"SignIn\"], {\n    role: $setup.userRole\n  }, null, 8 /* PROPS */, [\"role\"]), _createVNode($setup[\"SignUp\"])])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$setup","title","_createCommentVNode","onClick","switchToReader","switchToAdmin","_hoisted_5","_createVNode","role","userRole"],"sources":["C:\\LibraryManage\\Library-UI\\library\\src\\views\\LoginTest.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <div class=\"header\">\n      <img src=\"~@/assets/images/图书馆.png\" style=\"display: inline-block\"\n      width: 50px; height: 50px />\n      <h1 class=\"title\">{{ title }}</h1>\n      <!-- 使用动态数据绑定 -->\n      <div class=\"identity-switch\">\n        <button @click=\"switchToReader\">切换到读者</button>\n        <button @click=\"switchToAdmin\">切换到管理员</button>\n      </div>\n    </div>\n\n    <div class=\"main\">\n      <SwitchView />\n      <SignIn :role=\"userRole\" />\n      <SignUp />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\"; // 引入 ref\nimport SwitchView from \"@/logincomponents/SwitchView.vue\";\nimport SignIn from \"@/logincomponents/Sign-in.vue\";\nimport SignUp from \"@/logincomponents/Sign-up.vue\";\nimport router from \"@/router\";\n// 定义响应式数据\nconst title = ref(\"您好，管理员\"); // 初始标题\nconst userRole = ref(\"reader\");\nconst switchToReader = () => {\n  router.push(\"/loginUser\");\n  userRole.value = \"reader\";\n  title.value = \"你好，读者\"; // 切换到读者时更新标题\n  console.log(\"切换到读者\");\n};\n\nconst switchToAdmin = () => {\n  router.push(\"/LoginTest\");\n  userRole.value = \"admin\";\n  title.value = \"您好，管理员\"; // 切换到管理员时更新标题\n  console.log(\"切换到管理员\");\n};\n</script>\n\n<style scoped>\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  user-select: none;\n}\n\n.body {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column; /* 使内容垂直排列 */\n  justify-content: flex-start; /* 从顶部开始对齐 */\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 12px;\n  color: #a0a5a8;\n  background: url(\"~@/assets/images/backgroud.jpg\") 100% no-repeat;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 5px; /* 加一些内边距 */\n  background-color: hsl(210, 100%, 63%); /* 背景颜色 */\n}\n\n.title {\n  color: white; /* 字体颜色 */\n  margin: 0; /* 去掉默认边距 */\n}\n\n.identity-switch button {\n  background-color: white;\n  color: hsl(210, 100%, 63%);\n  border: none;\n  padding: 10px 15px;\n  margin-left: 10px;\n  cursor: pointer;\n  border-radius: 5px; /* 圆角按钮 */\n}\n\n.identity-switch button:hover {\n  background-color: #e0e0e0; /* 悬停时的背景颜色 */\n}\n\n.main {\n  margin: 40px auto;\n  background-color: rgba(236, 240, 243, 0.7);\n  position: relative;\n  width: 1000px;\n  min-width: 1000px;\n  min-height: 600px;\n  height: 600px;\n  padding: 25px;\n  background-color: #ecf0f3;\n  box-shadow: none;\n  border-radius: 20px;\n  overflow: hidden;\n}\n\n@media (max-width: 1200px) {\n  .main {\n    transform: scale(0.7);\n  }\n}\n@media (max-width: 1000px) {\n  .main {\n    transform: scale(0.6);\n  }\n}\n@media (max-width: 800px) {\n  .main {\n    transform: scale(0.5);\n  }\n}\n@media (max-width: 600px) {\n  .main {\n    transform: scale(0.4);\n  }\n}\n</style>\n"],"mappings":";OAGWA,UAA8B;;;EAFlCC,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAQ;gEACjBC,mBAAA,CAC4B;EADvBC,GAA8B,EAA9BH,UAA8B;EAACI,KAA6B,EAA7B;IAAA;EAAA,CAA6B;EACjE,QAAM,EAAN,EAAM;EAAC,OAAK,EAAL,EAAK;EAAC,SAAO,EAAP,EAAO;EAAC,MAAI,EAAJ;;;EACjBH,KAAK,EAAC;AAAO;;EAQdA,KAAK,EAAC;AAAM;;uBAZnBI,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJJ,mBAAA,CASM,OATNK,UASM,GARJC,UAC4B,EAC5BN,mBAAA,CAAkC,MAAlCO,UAAkC,EAAAC,gBAAA,CAAbC,MAAA,CAAAC,KAAK,kBAC1BC,mBAAA,cAAiB,EACjBX,mBAAA,CAGM;IAHDD,KAAK,EAAC;EAAiB,IAC1BC,mBAAA,CAA8C;IAArCY,OAAK,EAAEH,MAAA,CAAAI;EAAc,GAAE,OAAK,GACrCb,mBAAA,CAA8C;IAArCY,OAAK,EAAEH,MAAA,CAAAK;EAAa,GAAE,QAAM,E,KAIzCd,mBAAA,CAIM,OAJNe,UAIM,GAHJC,YAAA,CAAcP,MAAA,iBACdO,YAAA,CAA2BP,MAAA;IAAlBQ,IAAI,EAAER,MAAA,CAAAS;EAAQ,mCACvBF,YAAA,CAAUP,MAAA,Y"},"metadata":{},"sourceType":"module","externalDependencies":[]}