{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-85533930\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"header\",\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = {\n  style: {\n    \"margin-left\": \"10px\"\n  },\n  class: \"title\"\n};\nconst _hoisted_4 = {\n  class: \"main\"\n};\nimport { ref } from \"vue\"; // 引入 ref\nimport SwitchView from \"@/logincomponents/SwitchView.vue\";\nimport SignIn from \"@/logincomponents/Sign-in.vue\";\nimport SignUp from \"@/logincomponents/Sign-up.vue\";\nimport router from \"@/router\";\n// 定义响应式数据\n\nexport default {\n  __name: 'LoginTest',\n  setup(__props) {\n    const title = ref(\"您好，管理员\"); // 初始标题\n    const userRole = ref(\"reader\");\n    const switchToReader = () => {\n      router.push(\"/loginUser\");\n      userRole.value = \"reader\";\n      title.value = \"你好，读者\"; // 切换到读者时更新标题\n      console.log(\"切换到读者\");\n    };\n    const switchToAdmin = () => {\n      router.push(\"/LoginTest\");\n      userRole.value = \"admin\";\n      title.value = \"您好，管理员\"; // 切换到管理员时更新标题\n      console.log(\"切换到管理员\");\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", _hoisted_3, _toDisplayString(title.value), 1), _createElementVNode(\"div\", {\n        class: \"identity-switch\"\n      }, [_createElementVNode(\"button\", {\n        onClick: switchToReader\n      }, \"切换到读者\"), _createElementVNode(\"button\", {\n        onClick: switchToAdmin\n      }, \"切换到管理员\")])]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(SwitchView), _createVNode(SignIn, {\n        role: userRole.value\n      }, null, 8, [\"role\"]), _createVNode(SignUp)])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","SwitchView","SignIn","SignUp","router","title","userRole","switchToReader","push","value","console","log","switchToAdmin"],"sources":["C:/LibraryManage/Library-UI/library/src/views/LoginTest.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <div\n      class=\"header\"\n      style=\"display: flex; align-items: center; justify-content: space-between\"\n    >\n      <h1 style=\"margin-left: auto; margin-left: 10px\" class=\"title\">\n        {{ title }}\n      </h1>\n      <!-- 使用动态数据绑定 -->\n      <div class=\"identity-switch\">\n        <button @click=\"switchToReader\">切换到读者</button>\n        <button @click=\"switchToAdmin\">切换到管理员</button>\n      </div>\n    </div>\n\n    <div class=\"main\">\n      <SwitchView />\n      <SignIn :role=\"userRole\" />\n      <SignUp />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\"; // 引入 ref\nimport SwitchView from \"@/logincomponents/SwitchView.vue\";\nimport SignIn from \"@/logincomponents/Sign-in.vue\";\nimport SignUp from \"@/logincomponents/Sign-up.vue\";\nimport router from \"@/router\";\n// 定义响应式数据\nconst title = ref(\"您好，管理员\"); // 初始标题\nconst userRole = ref(\"reader\");\nconst switchToReader = () => {\n  router.push(\"/loginUser\");\n  userRole.value = \"reader\";\n  title.value = \"你好，读者\"; // 切换到读者时更新标题\n  console.log(\"切换到读者\");\n};\n\nconst switchToAdmin = () => {\n  router.push(\"/LoginTest\");\n  userRole.value = \"admin\";\n  title.value = \"您好，管理员\"; // 切换到管理员时更新标题\n  console.log(\"切换到管理员\");\n};\n</script>\n\n<style scoped>\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  user-select: none;\n}\n\n.body {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column; /* 使内容垂直排列 */\n  justify-content: flex-start; /* 从顶部开始对齐 */\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 12px;\n  color: #a0a5a8;\n  background: url(\"~@/assets/images/backgroud.jpg\") 100% no-repeat;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 5px; /* 加一些内边距 */\n  background-color: hsl(210, 100%, 63%); /* 背景颜色 */\n}\n\n.title {\n  color: white; /* 字体颜色 */\n  margin: 0; /* 去掉默认边距 */\n}\n\n.identity-switch button {\n  background-color: white;\n  color: hsl(210, 100%, 63%);\n  border: none;\n  padding: 10px 15px;\n  margin-left: 10px;\n  cursor: pointer;\n  border-radius: 5px; /* 圆角按钮 */\n}\n\n.identity-switch button:hover {\n  background-color: #e0e0e0; /* 悬停时的背景颜色 */\n}\n\n.main {\n  margin: 40px auto;\n  background-color: rgba(236, 240, 243, 0.7);\n  position: relative;\n  width: 1000px;\n  min-width: 1000px;\n  min-height: 600px;\n  height: 600px;\n  padding: 25px;\n  background-color: #ecf0f3;\n  box-shadow: none;\n  border-radius: 20px;\n  overflow: hidden;\n}\n\n@media (max-width: 1200px) {\n  .main {\n    transform: scale(0.7);\n  }\n}\n@media (max-width: 1000px) {\n  .main {\n    transform: scale(0.6);\n  }\n}\n@media (max-width: 800px) {\n  .main {\n    transform: scale(0.5);\n  }\n}\n@media (max-width: 600px) {\n  .main {\n    transform: scale(0.4);\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAASA,GAAG,QAAQ,KAAK,CAAC,CAAC;AAC3B,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B;;;;;IACA,MAAMC,KAAK,GAAGL,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7B,MAAMM,QAAQ,GAAGN,GAAG,CAAC,QAAQ,CAAC;IAC9B,MAAMO,cAAc,GAAGA,CAAA,KAAM;MAC3BH,MAAM,CAACI,IAAI,CAAC,YAAY,CAAC;MACzBF,QAAQ,CAACG,KAAK,GAAG,QAAQ;MACzBJ,KAAK,CAACI,KAAK,GAAG,OAAO,CAAC,CAAC;MACvBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1BR,MAAM,CAACI,IAAI,CAAC,YAAY,CAAC;MACzBF,QAAQ,CAACG,KAAK,GAAG,OAAO;MACxBJ,KAAK,CAACI,KAAK,GAAG,QAAQ,CAAC,CAAC;MACxBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}