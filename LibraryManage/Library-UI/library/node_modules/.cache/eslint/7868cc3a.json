[{"C:\\LibraryManage\\Library-UI\\library\\src\\main.ts":"1","C:\\LibraryManage\\Library-UI\\library\\src\\App.vue":"2","C:\\LibraryManage\\Library-UI\\library\\src\\router\\index.ts":"3","C:\\LibraryManage\\Library-UI\\library\\src\\store\\index.ts":"4","C:\\LibraryManage\\Library-UI\\library\\src\\views\\NavView.vue":"5","C:\\LibraryManage\\Library-UI\\library\\src\\views\\LoginTest.vue":"6","C:\\LibraryManage\\Library-UI\\library\\src\\views\\HomeView.vue":"7","C:\\LibraryManage\\Library-UI\\library\\src\\views\\OvertimeView.vue":"8","C:\\LibraryManage\\Library-UI\\library\\src\\views\\BookView.vue":"9","C:\\LibraryManage\\Library-UI\\library\\src\\views\\BorrowView.vue":"10","C:\\LibraryManage\\Library-UI\\library\\src\\views\\SystemView.vue":"11","C:\\LibraryManage\\Library-UI\\library\\src\\views\\NavViewUser.vue":"12","C:\\LibraryManage\\Library-UI\\library\\src\\views\\ReturnView.vue":"13","C:\\LibraryManage\\Library-UI\\library\\src\\views\\UserView.vue":"14","C:\\LibraryManage\\Library-UI\\library\\src\\views\\UserViewUser.vue":"15","C:\\LibraryManage\\Library-UI\\library\\src\\views\\BookViewUser.vue":"16","C:\\LibraryManage\\Library-UI\\library\\src\\views\\LoginViewUser.vue":"17","C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\Sign-in.vue":"18","C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\SwitchView.vue":"19","C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\Sign-up.vue":"20","C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\Sign-up-user.vue":"21","C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\Sign-in-user.vue":"22","C:\\LibraryManage\\Library-UI\\library\\src\\hooks\\useloginEmitter.js":"23"},{"size":459,"mtime":1734763795172,"results":"24","hashOfConfig":"25"},{"size":335,"mtime":1734208618000,"results":"26","hashOfConfig":"25"},{"size":3149,"mtime":1734773960295,"results":"27","hashOfConfig":"25"},{"size":145,"mtime":1734208618000,"results":"28","hashOfConfig":"25"},{"size":5257,"mtime":1734779027128,"results":"29","hashOfConfig":"25"},{"size":3004,"mtime":1734760497661,"results":"30","hashOfConfig":"25"},{"size":3728,"mtime":1734786595032,"results":"31","hashOfConfig":"25"},{"size":6586,"mtime":1734786605479,"results":"32","hashOfConfig":"25"},{"size":18956,"mtime":1734786586738,"results":"33","hashOfConfig":"25"},{"size":4390,"mtime":1734786588183,"results":"34","hashOfConfig":"25"},{"size":8933,"mtime":1734786692477,"results":"35","hashOfConfig":"25"},{"size":4543,"mtime":1734780421721,"results":"36","hashOfConfig":"25"},{"size":6302,"mtime":1734786812077,"results":"37","hashOfConfig":"25"},{"size":22476,"mtime":1734786631427,"results":"38","hashOfConfig":"25"},{"size":5621,"mtime":1734786629627,"results":"39","hashOfConfig":"25"},{"size":5203,"mtime":1734786585750,"results":"40","hashOfConfig":"25"},{"size":2821,"mtime":1734712469002,"results":"41","hashOfConfig":"25"},{"size":7269,"mtime":1734786933192,"results":"42","hashOfConfig":"25"},{"size":1435,"mtime":1734612184000,"results":"43","hashOfConfig":"25"},{"size":7657,"mtime":1734786528910,"results":"44","hashOfConfig":"25"},{"size":7085,"mtime":1734786522210,"results":"45","hashOfConfig":"25"},{"size":7317,"mtime":1734786506254,"results":"46","hashOfConfig":"25"},{"size":231,"mtime":1734607590000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ndr3q0",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\LibraryManage\\Library-UI\\library\\src\\main.ts",[],"C:\\LibraryManage\\Library-UI\\library\\src\\App.vue",[],"C:\\LibraryManage\\Library-UI\\library\\src\\router\\index.ts",[],"C:\\LibraryManage\\Library-UI\\library\\src\\store\\index.ts",[],"C:\\LibraryManage\\Library-UI\\library\\src\\views\\NavView.vue",["107","108","109"],"<template>\n  <div class=\"nav\">\n    <el-container class=\"layout-container-demo\" style=\"height: 100%\">\n      <el-aside>\n        <!-- 导航栏 -->\n        <el-scrollbar>\n          <div class=\"title\"><p>图书管理系统</p></div>\n          <el-menu router unique-opened>\n            <el-menu-item index=\"/home\" @click=\"addTab('主页', '/home')\">\n              <el-icon><House /></el-icon>主页\n            </el-menu-item>\n            <el-sub-menu\n              v-for=\"(item, index) in dynamicRoutes\"\n              :key=\"index + 1\"\n              :index=\"index + ''\"\n              v-show=\"item.meta?.show !== false\"\n            >\n              <template #title>\n                <el-icon v-if=\"item.name === '图书'\"><Reading /></el-icon>\n                <el-icon v-if=\"item.name === '其他'\"><Setting /></el-icon>\n                <el-icon v-if=\"item.name === '用户'\"><User /></el-icon>\n                <p>{{ item.name }}</p>\n              </template>\n              <el-menu-item\n                v-for=\"(item2, index2) in item.children\"\n                :key=\"index2\"\n                :index=\"item2.path\"\n                v-show=\"item2.meta?.show !== false\"\n                @click=\"addTab(item2.name, item2.path)\"\n              >\n                {{ item2.name }}\n              </el-menu-item>\n            </el-sub-menu>\n            <el-menu-item @click=\"loginOut\">\n              <el-icon><Back /></el-icon>退出系统\n            </el-menu-item>\n          </el-menu>\n        </el-scrollbar>\n      </el-aside>\n\n      <el-main>\n        <!-- 用户信息工具栏 -->\n        <div class=\"toolbar\">\n          <span>{{ userInfo.username }}</span>\n          <el-dropdown>\n            <el-icon><Setting /></el-icon>\n            <template #dropdown>\n              <el-dropdown-menu>\n                <el-dropdown-item @click=\"loginOut\">登出</el-dropdown-item>\n              </el-dropdown-menu>\n            </template>\n          </el-dropdown>\n        </div>\n        <!-- 标签栏 -->\n        <div class=\"tabs\">\n          <el-tabs\n            v-model=\"editableTabsValue\"\n            @tab-click=\"tabClick\"\n            @tab-remove=\"tabRemove\"\n          >\n            <el-tab-pane\n              v-for=\"item in editableTabs\"\n              :label=\"item.name\"\n              :key=\"item.path\"\n              :name=\"item.path\"\n              :closable=\"item.closable\"\n            >\n              <router-view\n                :key=\"item.path\"\n                :name=\"item.routerName\"\n              ></router-view>\n            </el-tab-pane>\n          </el-tabs>\n        </div>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, onMounted } from \"vue\";\nimport { House, Reading, User, Setting, Back } from \"@element-plus/icons-vue\";\nimport router from \"../router/index\";\nimport jsCookie from \"js-cookie\";\nimport { ElMessageBox } from \"element-plus\";\n\n// 获取动态路由\nconst dynamicRoutes = ref(\n  router\n    .getRoutes()\n    .filter((route) => route.children && route.children.length > 0)\n);\n\n// 判断用户登录状态\nconst userLoginState = jsCookie.get(\"username\");\nif (userLoginState == undefined) {\n  ElMessageBox.alert(\"登录信息已过期，请重新登录\", \"信息\", {\n    confirmButtonText: \"确认\",\n    callback: () => {\n      // 页面跳转\n      router.push(\"/login\");\n    },\n  });\n}\n\n// 用户信息\nconst userInfo = ref({\n  username: jsCookie.get(\"username\"),\n});\n\n// 退出系统\nconst loginOut = () => {\n  ElMessageBox.alert(\"您已成功登出\", \"信息\", {\n    confirmButtonText: \"确认\",\n    callback: () => {\n      // 页面跳转\n      router.push(\"/LoginTest\");\n      // 删除cookie\n      jsCookie.remove(\"username\");\n    },\n  });\n};\n\n// 添加标签栏\nconst addTab = (name: any, path: any) => {\n  let isExist = false;\n  // 判断标签是否存在\n  for (const item of editableTabs.value) {\n    if (item.name == name && item.path == path) {\n      isExist = true;\n      break;\n    }\n  }\n\n  // 若标签不存在则添加\n  if (!isExist) {\n    editableTabs.value.push({\n      name: name,\n      path: path,\n      closable: true,\n      routerName: path.substring(1),\n    });\n  }\n\n  // 切换标签页\n  editableTabsValue.value = path;\n};\n\n// 标签栏\nlet editableTabsValue = ref(\"/home\");\nconst editableTabs = ref([\n  {\n    name: \"主页\",\n    path: \"/home\",\n    closable: false,\n    routerName: \"home\",\n  },\n]);\n\n// 点击标签栏\nconst tabClick = (tab: any) => {\n  router.push(tab.props.name);\n};\n\n// 移除标签栏\nconst tabRemove = (targetName: string) => {\n  const tabs = editableTabs.value;\n  let activeName = editableTabsValue.value;\n  if (activeName === targetName) {\n    tabs.forEach((tab, index) => {\n      if (tab.path === targetName) {\n        const nextTab = tabs[index + 1] || tabs[index - 1];\n        if (nextTab) {\n          activeName = nextTab.path;\n        }\n      }\n    });\n  }\n\n  // 切换页面\n  router.push(activeName);\n  editableTabsValue.value = activeName;\n  editableTabs.value = tabs.filter((tab) => tab.path !== targetName);\n};\n\n// 标签初始化\nonMounted(() => {\n  const tabName = router.currentRoute.value.name;\n  const tabPath = router.currentRoute.value.path;\n  addTab(tabName, tabPath);\n});\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/nav\";\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\views\\LoginTest.vue",["110","111"],"<template>\n  <div class=\"body\">\n    <div\n      class=\"header\"\n      style=\"display: flex; align-items: center; justify-content: space-between\"\n    >\n      <h1 style=\"margin-left: auto; margin-left: 10px\" class=\"title\">\n        {{ title }}\n      </h1>\n      <!-- 使用动态数据绑定 -->\n      <div class=\"identity-switch\">\n        <button @click=\"switchToReader\">切换到读者</button>\n        <button @click=\"switchToAdmin\">切换到管理员</button>\n      </div>\n    </div>\n\n    <div class=\"main\">\n      <SwitchView />\n      <SignIn :role=\"userRole\" />\n      <SignUp />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\"; // 引入 ref\nimport SwitchView from \"@/logincomponents/SwitchView.vue\";\nimport SignIn from \"@/logincomponents/Sign-in.vue\";\nimport SignUp from \"@/logincomponents/Sign-up.vue\";\nimport router from \"@/router\";\n// 定义响应式数据\nconst title = ref(\"您好，管理员\"); // 初始标题\nconst userRole = ref(\"reader\");\nconst switchToReader = () => {\n  router.push(\"/loginUser\");\n  userRole.value = \"reader\";\n  title.value = \"你好，读者\"; // 切换到读者时更新标题\n  console.log(\"切换到读者\");\n};\n\nconst switchToAdmin = () => {\n  router.push(\"/LoginTest\");\n  userRole.value = \"admin\";\n  title.value = \"您好，管理员\"; // 切换到管理员时更新标题\n  console.log(\"切换到管理员\");\n};\n</script>\n\n<style scoped>\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  user-select: none;\n}\n\n.body {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column; /* 使内容垂直排列 */\n  justify-content: flex-start; /* 从顶部开始对齐 */\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 12px;\n  color: #a0a5a8;\n  background: url(\"~@/assets/images/backgroud.jpg\") 100% no-repeat;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 5px; /* 加一些内边距 */\n  background-color: hsl(210, 100%, 63%); /* 背景颜色 */\n}\n\n.title {\n  color: white; /* 字体颜色 */\n  margin: 0; /* 去掉默认边距 */\n}\n\n.identity-switch button {\n  background-color: white;\n  color: hsl(210, 100%, 63%);\n  border: none;\n  padding: 10px 15px;\n  margin-left: 10px;\n  cursor: pointer;\n  border-radius: 5px; /* 圆角按钮 */\n}\n\n.identity-switch button:hover {\n  background-color: #e0e0e0; /* 悬停时的背景颜色 */\n}\n\n.main {\n  margin: 40px auto;\n  background-color: rgba(236, 240, 243, 0.7);\n  position: relative;\n  width: 1000px;\n  min-width: 1000px;\n  min-height: 600px;\n  height: 600px;\n  padding: 25px;\n  background-color: #ecf0f3;\n  box-shadow: none;\n  border-radius: 20px;\n  overflow: hidden;\n}\n\n@media (max-width: 1200px) {\n  .main {\n    transform: scale(0.7);\n  }\n}\n@media (max-width: 1000px) {\n  .main {\n    transform: scale(0.6);\n  }\n}\n@media (max-width: 800px) {\n  .main {\n    transform: scale(0.5);\n  }\n}\n@media (max-width: 600px) {\n  .main {\n    transform: scale(0.4);\n  }\n}\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\views\\HomeView.vue",["112","113","114","115"],"<template>\n  <div class=\"home\">\n    <el-main>\n      <!--      仪表盘-->\n      <el-row class=\"dashboard\">\n        <el-col :xs=\"24\" :sm=\"12\" :lg=\"6\" class=\"book-num pane\"\n          ><div>\n            <el-icon><Reading /></el-icon>\n            <div class=\"message\">\n              <p class=\"title\">图书馆书本数量</p>\n              <p class=\"sub-title\">{{ bookCount }}</p>\n            </div>\n          </div></el-col\n        >\n        <el-col :xs=\"24\" :sm=\"12\" :lg=\"6\" class=\"overtime-num pane\"\n          ><div>\n            <el-icon><Failed /></el-icon>\n            <div class=\"message\">\n              <p class=\"title\">超时归还数量</p>\n              <p class=\"sub-title\">{{ overtimeCount }}</p>\n            </div>\n          </div></el-col\n        >\n        <el-col :xs=\"24\" :sm=\"12\" :lg=\"6\" class=\"borrow-num pane\"\n          ><div>\n            <el-icon><List /></el-icon>\n            <div class=\"message\">\n              <p class=\"title\">借出书本数量</p>\n              <p class=\"sub-title\">{{ borrowCount }}</p>\n            </div>\n          </div></el-col\n        >\n        <el-col :xs=\"24\" :sm=\"12\" :lg=\"6\" class=\"system-time pane\"\n          ><div>\n            <el-icon><Timer /></el-icon>\n            <div class=\"message\">\n              <p class=\"title\">系统时间</p>\n              <p class=\"time\">{{ times }}</p>\n            </div>\n          </div></el-col\n        >\n      </el-row>\n      <!--      介绍卡片-->\n      <!--      日志卡片-->\n      <el-card class=\"log\">\n        <template #header>\n          <span>操作日志</span>\n        </template>\n        <el-table\n          style=\"width: 100%\"\n          height=\"600\"\n          :data=\"logs\"\n          :default-sort=\"{ prop: 'date', order: 'descending' }\"\n        >\n          <el-table-column\n            prop=\"time\"\n            label=\"日期/时间\"\n            sortable\n            width=\"220px\"\n          />\n          <el-table-column prop=\"name\" label=\"名字\" width=\"120px\" />\n          <el-table-column prop=\"info\" label=\"操作\" />\n        </el-table>\n      </el-card>\n    </el-main>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { Reading, Failed, List, Timer } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\n\n// 仪表盘数据\nlet bookCount = ref(0);\nlet overtimeCount = ref(0);\nlet borrowCount = ref(0);\nlet times = ref(\"\");\n\n//系统时间\nsetInterval(function () {\n  let date = new Date();\n  let year = date.getFullYear(); //获取当前年份\n  let mon = date.getMonth() + 1; //获取当前月份\n  let da = date.getDate(); //获取当前日\n  let day = date.getDay(); //获取当前星期几\n  let h: any = date.getHours(); //获取小时\n  let m: any = date.getMinutes(); //获取分钟\n  let s: any = date.getSeconds(); //获取秒\n  let weeks = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"]; //星期\n  let d = document.getElementById(\"Date\");\n  if (h < 10) {\n    h = \"0\" + h;\n  }\n  if (m < 10) {\n    m = \"0\" + m;\n  }\n  if (s < 10) {\n    s = \"0\" + s;\n  }\n  times.value =\n    year +\n    \"-\" +\n    mon +\n    \"-\" +\n    da +\n    \" \" +\n    \"星期\" +\n    weeks[day] +\n    \" \" +\n    h +\n    \":\" +\n    m +\n    \":\" +\n    s;\n}, 1);\n\n// 获取仪表盘数据\nconst getDashboard = () => {\n  axios.get(\"http://202.194.7.29:22223/book/dashboard/\").then((resp) => {\n    bookCount.value = resp.data.bookCount;\n    overtimeCount.value = resp.data.overtimeCount;\n    borrowCount.value = resp.data.borrowCount;\n  });\n};\ngetDashboard();\n\n// 获取日志数据\nlet logs = ref();\nconst getLogs = () => {\n  axios.get(\"http://202.194.7.29:22223/nav/logs/\").then((resp) => {\n    logs.value = resp.data.content;\n  });\n};\ngetLogs();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/home\";\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\views\\OvertimeView.vue",["116","117","118"],"<template>\n  <div class=\"overtime\">\n    <el-container>\n      <el-main>\n        <!--        超时查询操作栏-->\n        <el-row class=\"overtime-header\">\n          <el-col :span=\"4\" class=\"search-page-pane\">\n            <el-select\n              v-model=\"pageSize\"\n              placeholder=\"数据显示\"\n              @change=\"changeSize\"\n              class=\"search-size\"\n            >\n              <el-option\n                v-for=\"item in sizeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              >\n              </el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"16\" class=\"search-input-pane\">\n            <el-row>\n              <el-col :span=\"18\">\n                <el-input\n                  placeholder=\"请输入搜索内容\"\n                  v-model=\"searchInput\"\n                  :suffix-icon=\"Search\"\n                  class=\"search-input\"\n                >\n                </el-input>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-button\n                  type=\"primary\"\n                  class=\"search-button\"\n                  @click=\"searchButton\"\n                >\n                  搜索\n                </el-button>\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n        <!--        超时查询表格栏-->\n        <el-row class=\"overtime-table\">\n          <el-col>\n            <el-table :data=\"overtimes\" height=\"100%\" empty-text=\"没有数据\">\n              <el-table-column fixed prop=\"id\" label=\"Id\" width=\"50\" />\n              <el-table-column prop=\"bookName\" label=\"书名\" />\n              <el-table-column prop=\"isbn\" label=\"ISBN号码\" />\n              <el-table-column prop=\"username\" label=\"借阅人\" />\n              <el-table-column prop=\"idCard\" label=\"借阅卡号\" />\n              <el-table-column prop=\"borrowTime\" label=\"借阅时间\" />\n              <el-table-column prop=\"overtimeTime\" label=\"应归还时间\" />\n              <el-table-column fixed=\"right\" label=\"操作\">\n                <template #default=\"overtimes\">\n                  <el-button\n                    @click=\"overtimeBookDialog(overtimes.row)\"\n                    type=\"text\"\n                    >归还</el-button\n                  >\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n              background\n              v-model:current-page=\"pageNum\"\n              v-model:page-size=\"pageSize\"\n              layout=\"prev, pager, next\"\n              :total=\"pageTotal\"\n              @current-change=\"page\"\n            >\n            </el-pagination>\n          </el-col>\n        </el-row>\n        <!--        超时查询对话框-->\n        <el-dialog\n          v-model=\"overtimeBookDialogVisible\"\n          title=\"归还图书\"\n          width=\"500px\"\n        >\n          <span>确认归还 {{ overtimeName }}</span>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"overtimeBookDialogVisible = false\"\n                >取消</el-button\n              >\n              <el-button type=\"primary\" @click=\"overtimeBook\"> 确认 </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { Search } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport { ElMessageBox } from \"element-plus\";\n\n// 超时未归还图书信息\nlet overtimes = ref();\nconst getOvertime = () => {\n  axios\n    .get(\n      \"http://202.194.7.29:22223/borrow/overtime/\" +\n        pageNum.value +\n        \"/\" +\n        pageSize.value\n    )\n    .then((resp) => {\n      overtimes.value = resp.data.content;\n      pageTotal.value = resp.data.totalElements;\n    });\n};\n\n// 显示数据数量选项\nlet pageNum = ref(1);\nlet pageSize = ref(10);\nlet pageTotal = ref(0);\nconst page = (val: number) => {\n  pageNum.value = val;\n  if (searchInput.value == undefined) {\n    getOvertime();\n  } else {\n    searchOvertime();\n  }\n};\n\n// 数据显示框\nlet sizeOptions = [\n  {\n    value: 10,\n    label: \"10条数据/页\",\n  },\n  {\n    value: 50,\n    label: \"50条数据/页\",\n  },\n  {\n    value: 100,\n    label: \"100条数据/页\",\n  },\n];\n\n// 修改显示数据量\nconst changeSize = (value: number) => {\n  pageSize.value = value;\n  if (searchInput.value == undefined) {\n    getOvertime();\n  } else {\n    searchOvertime();\n  }\n};\n\n// 搜索框数据\nconst searchInput = ref();\n// 搜索框按钮\nconst searchButton = () => {\n  pageNum.value = 1;\n  searchOvertime();\n};\n// 搜索超时未归还图书信息\nconst searchOvertime = () => {\n  if (searchInput.value != \"\" && searchInput.value != undefined) {\n    axios\n      .get(\n        \"http://202.194.7.29:22223/borrow/overtime/search/\" +\n          searchInput.value +\n          \"/\" +\n          pageNum.value +\n          \"/\" +\n          pageSize.value\n      )\n      .then((resp) => {\n        overtimes.value = resp.data.content;\n        pageTotal.value = resp.data.totalElements;\n      });\n  } else {\n    getOvertime();\n  }\n};\n// 超时查询\nlet overtimeName = ref(\"\");\nlet overtimeId = ref(0);\nlet overtimeBookDialogVisible = ref(false);\nconst overtimeBookDialog = (row: any) => {\n  overtimeId.value = row.id;\n  overtimeName.value = row.bookName;\n  console.log(overtimeId);\n  console.log(overtimeName);\n  overtimeBookDialogVisible.value = true;\n};\n// 归还图书\nconst overtimeBook = () => {\n  if (overtimeId.value) {\n    axios\n      .post(\"http://202.194.7.29:22223/borrow/return/\" + overtimeId.value)\n      .then((resp) => {\n        const statusCode = resp.data.statusCode;\n\n        // 归还失败\n        if (statusCode == 0) {\n          ElMessageBox.alert(\"归还图书失败，请重试\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n        // 归还成功\n        if (statusCode == 1) {\n          ElMessageBox.alert(\"归还图书成功\", \"信息\", {\n            confirmButtonText: \"确认\",\n            callback: () => {\n              overtimeBookDialogVisible.value = false;\n            },\n          });\n        }\n        // 借阅记录不存在\n        if (statusCode == 2) {\n          ElMessageBox.alert(\"归还失败，此借阅记录不存在\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n      });\n  }\n};\n\n// 初始化\nconst init = () => {\n  getOvertime();\n};\ninit();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/overtime\";\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\views\\BookView.vue",["119","120","121","122","123","124"],"<template>\n  <div class=\"book\">\n    <el-container>\n      <el-main>\n        <!--        图书操作栏-->\n        <el-row class=\"book-header\">\n          <el-col :span=\"4\" class=\"search-page-pane\">\n            <el-select\n              v-model=\"pageSize\"\n              placeholder=\"数据显示\"\n              @change=\"changeSize\"\n              class=\"search-size\"\n            >\n              <el-option\n                v-for=\"item in sizeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              >\n              </el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"16\" class=\"search-input-pane\">\n            <el-row>\n              <el-col :span=\"4\">\n                <el-select\n                  v-model=\"searchModel\"\n                  placeholder=\"搜索类型\"\n                  @change=\"changeSearch\"\n                  class=\"search-size\"\n                >\n                  <el-option\n                    v-for=\"item in searchOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n              <el-col :span=\"14\">\n                <el-input\n                  placeholder=\"请输入搜索内容\"\n                  v-model=\"searchInput\"\n                  :suffix-icon=\"Search\"\n                  class=\"search-input\"\n                >\n                </el-input>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-button\n                  type=\"primary\"\n                  class=\"search-button\"\n                  @click=\"searchButton\"\n                >\n                  搜索\n                </el-button>\n              </el-col>\n            </el-row>\n          </el-col>\n          <el-col :span=\"4\" class=\"add-button-pane\">\n            <el-button\n              type=\"success\"\n              :icon=\"Plus\"\n              class=\"add-button\"\n              @click=\"addFromButton(addBookFormRef)\"\n            >\n              添加图书\n            </el-button>\n          </el-col>\n        </el-row>\n        <!--        图书表格栏-->\n        <el-row class=\"book-table\">\n          <el-col>\n            <el-table :data=\"books\" height=\"100%\" empty-text=\"没有数据\">\n              <el-table-column fixed prop=\"id\" label=\"Id\" width=\"50\" />\n              <el-table-column prop=\"groups\" label=\"组名\" />\n              <el-table-column prop=\"name\" label=\"书名\" />\n              <el-table-column prop=\"author\" label=\"作者\" />\n              <el-table-column prop=\"press\" label=\"出版社\" />\n              <el-table-column prop=\"price\" label=\"价格(人民币)\" />\n              <el-table-column prop=\"quantity\" label=\"数量(本)\" />\n              <el-table-column prop=\"isbn\" label=\"ISBN号码\" />\n              <el-table-column fixed=\"right\" label=\"操作\">\n                <template #default=\"books\">\n                  <el-button\n                    @click=\"editFromButton(editBookFormRef, books.row)\"\n                    type=\"text\"\n                    >编辑</el-button\n                  >\n                  <el-button @click=\"deleteBookDialog(books.row)\" type=\"text\"\n                    >删除</el-button\n                  >\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n              background\n              v-model:current-page=\"pageNum\"\n              v-model:page-size=\"pageSize\"\n              layout=\"prev, pager, next\"\n              :total=\"pageTotal\"\n              @current-change=\"page\"\n            >\n            </el-pagination>\n          </el-col>\n        </el-row>\n\n        <!--         添加图书表单 -->\n        <el-dialog\n          v-model=\"addBookFormVisible\"\n          title=\"添加书籍\"\n          class=\"add-book-dialog\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <el-form\n            :model=\"addBookForm\"\n            :rules=\"bookRules\"\n            ref=\"addBookFormRef\"\n            class=\"add-book-form\"\n          >\n            <el-form-item\n              label=\"所属组\"\n              :label-width=\"formLabelWidth\"\n              prop=\"groups\"\n            >\n              <el-select\n                v-model=\"addBookForm.groups\"\n                placeholder=\"请选择所属组\"\n              >\n                <el-option\n                  v-for=\"item in bookType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.typeName\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"书名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"name\"\n            >\n              <el-input\n                v-model=\"addBookForm.name\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"作者\"\n              :label-width=\"formLabelWidth\"\n              prop=\"author\"\n            >\n              <el-input\n                v-model=\"addBookForm.author\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"出版社\"\n              :label-width=\"formLabelWidth\"\n              prop=\"press\"\n            >\n              <el-input\n                v-model=\"addBookForm.press\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"价格(人民币)\"\n              :label-width=\"formLabelWidth\"\n              prop=\"price\"\n            >\n              <el-input\n                v-model=\"addBookForm.price\"\n                autocomplete=\"off\"\n                maxlength=\"13\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"数量(本)\"\n              :label-width=\"formLabelWidth\"\n              prop=\"quantity\"\n            >\n              <el-input\n                v-model.number=\"addBookForm.quantity\"\n                autocomplete=\"off\"\n                maxlength=\"3\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"ISBN号码\"\n              :label-width=\"formLabelWidth\"\n              prop=\"isbn\"\n            >\n              <el-input\n                v-model.number=\"addBookForm.isbn\"\n                autocomplete=\"off\"\n                maxlength=\"13\"\n              ></el-input>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"addBookFormVisible = false\">取消</el-button>\n              <el-button type=\"primary\" @click=\"addBookButton(addBookFormRef)\">\n                添加\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n        <!--        编辑图书表单-->\n        <el-dialog\n          v-model=\"editBookFormVisible\"\n          title=\"编辑书籍\"\n          class=\"edit-book-dialog\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <el-form\n            :model=\"editBookForm\"\n            :rules=\"bookRules\"\n            ref=\"editBookFormRef\"\n            class=\"edit-book-form\"\n          >\n            <el-form-item\n              label=\"所属组\"\n              :label-width=\"formLabelWidth\"\n              prop=\"groups\"\n            >\n              <el-select\n                v-model=\"editBookForm.groups\"\n                placeholder=\"请选择所属组\"\n              >\n                <el-option\n                  v-for=\"item in bookType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.typeName\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"书名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"name\"\n            >\n              <el-input\n                v-model=\"editBookForm.name\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"作者\"\n              :label-width=\"formLabelWidth\"\n              prop=\"author\"\n            >\n              <el-input\n                v-model=\"editBookForm.author\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"出版社\"\n              :label-width=\"formLabelWidth\"\n              prop=\"press\"\n            >\n              <el-input\n                v-model=\"editBookForm.press\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"价格(人民币)\"\n              :label-width=\"formLabelWidth\"\n              prop=\"price\"\n            >\n              <el-input\n                v-model=\"editBookForm.price\"\n                autocomplete=\"off\"\n                maxlength=\"13\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"数量(本)\"\n              :label-width=\"formLabelWidth\"\n              prop=\"quantity\"\n            >\n              <el-input\n                v-model.number=\"editBookForm.quantity\"\n                autocomplete=\"off\"\n                maxlength=\"3\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"ISBN号码\"\n              :label-width=\"formLabelWidth\"\n              prop=\"isbn\"\n            >\n              <el-input\n                v-model.number=\"editBookForm.isbn\"\n                autocomplete=\"off\"\n                maxlength=\"13\"\n              ></el-input>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"editBookFormVisible = false\">取消</el-button>\n              <el-button\n                type=\"primary\"\n                @click=\"editBookButton(editBookFormRef)\"\n              >\n                编辑\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n        <!--        删除图书对话框-->\n        <el-dialog\n          v-model=\"deleteBookDialogVisible\"\n          title=\"删除图书\"\n          width=\"500px\"\n        >\n          <span>确认删除 {{ deleteName }}</span>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"deleteBookDialogVisible = false\"\n                >取消</el-button\n              >\n              <el-button type=\"danger\" @click=\"deleteBook\"> 确认 </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive, ref } from \"vue\";\nimport type { FormInstance, FormRules } from \"element-plus\";\nimport { Plus, Search } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport { ElMessageBox } from \"element-plus\";\nimport router from \"@/router\";\n\n// 标签长度\nlet formLabelWidth = 120;\n\n// 获取图书数据\nlet books = ref();\nconst getBook = () => {\n  axios\n    .get(\n      \"http://202.194.7.29:22223/book/\" + pageNum.value + \"/\" + pageSize.value\n    )\n    .then((resp) => {\n      books.value = resp.data.content;\n      pageTotal.value = resp.data.totalElements;\n    });\n};\n\n// 显示数据数量选项\nlet pageNum = ref(1);\nlet pageSize = ref(10);\nlet pageTotal = ref(0);\nconst page = (val: number) => {\n  pageNum.value = val;\n  if (searchInput.value == undefined) {\n    getBook();\n  } else {\n    searchBook();\n  }\n};\n\n// 数据显示框\nlet sizeOptions = [\n  {\n    value: 10,\n    label: \"10条数据/页\",\n  },\n  {\n    value: 50,\n    label: \"50条数据/页\",\n  },\n  {\n    value: 100,\n    label: \"100条数据/页\",\n  },\n];\n// 修改显示数据量\nconst changeSize = (value: number) => {\n  pageSize.value = value;\n  if (searchInput.value == undefined) {\n    getBook();\n  } else {\n    searchBook();\n  }\n};\n\n// 搜索框选项\nlet searchModel = ref(\"name\");\nlet searchOptions = [\n  {\n    value: \"name\",\n    label: \"图书名称\",\n  },\n  {\n    value: \"author\",\n    label: \"作者名称\",\n  },\n  {\n    value: \"press\",\n    label: \"出版社名称\",\n  },\n  {\n    value: \"isbn\",\n    label: \"ISBN号码\",\n  },\n];\nconst changeSearch = (value: string) => {\n  searchModel.value = value;\n};\n\n// 搜索框数据\nconst searchInput = ref();\n// 搜索框按钮\nconst searchButton = () => {\n  pageNum.value = 1;\n  searchBook();\n};\n// 搜索图书\nconst searchBook = () => {\n  if (searchInput.value != \"\") {\n    axios\n      .get(\n        \"http://202.194.7.29:22223/book/search/\" +\n          searchModel.value +\n          \"/\" +\n          searchInput.value +\n          \"/\" +\n          pageNum.value +\n          \"/\" +\n          pageSize.value\n      )\n      .then((resp) => {\n        books.value = resp.data.content;\n        pageTotal.value = resp.data.totalElements;\n      });\n  } else {\n    getBook();\n  }\n};\n\n// 图书表单判断\nconst checkISBN = (rule: any, value: any, callback: any) => {\n  if (!value) {\n    return callback(new Error(\"请输入ISBN号码\"));\n  } else {\n    if (!Number.isInteger(value)) {\n      callback(new Error(\"请输入正确的ISBN号码\"));\n    } else {\n      let isbnReg = /^[1-9]\\d{12}$/;\n      if (!isbnReg.test(value)) {\n        callback(new Error(\"请输入13位ISBN号码\"));\n      } else {\n        callback();\n      }\n    }\n  }\n};\n// 图书表单规则\nconst bookRules = reactive<FormRules>({\n  groups: [{ required: true, message: \"请输入组名称\", trigger: \"change\" }],\n  name: [{ required: true, message: \"请输入图书名称\", trigger: \"blur\" }],\n  author: [{ required: true, message: \"请输入作者名称\", trigger: \"blur\" }],\n  press: [{ required: true, message: \"请输入出版社名称\", trigger: \"blur\" }],\n  price: [{ required: true, message: \"请输入价格(人民币)\", trigger: \"blur\" }],\n  quantity: [{ required: true, message: \"请输入数量(本)\", trigger: \"blur\" }],\n  isbn: [{ required: true, validator: checkISBN, trigger: \"blur\" }],\n});\n\n// 图书种类选项框\nlet bookType = ref();\n// 获取图书种类\nconst getBookType = () => {\n  axios.get(\"http://202.194.7.29:22223/book/type\").then((resp) => {\n    bookType.value = resp.data;\n  });\n};\n\n// 添加图书对话框显示\nlet addBookFormVisible = ref(false);\n// 添加表单按钮\nconst addFromButton = (formEl: FormInstance | undefined) => {\n  addBookFormVisible.value = true;\n  if (!formEl) return;\n  formEl.resetFields();\n};\n\n// 添加图书表单\nconst addBookFormRef = ref<FormInstance>();\nlet addBookForm = reactive({\n  groups: \"\",\n  name: \"\",\n  author: \"\",\n  press: \"\",\n  price: \"\",\n  quantity: \"\",\n  isbn: \"\",\n});\n\n// 添加图书按钮\nconst addBookButton = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\"http://202.194.7.29:22223/book/save\", addBookForm)\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n\n          // 添加失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"添加图书失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 添加成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"添加成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                addBookFormVisible.value = false;\n              },\n            });\n          }\n          // ISBN号码存在\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"添加失败，此ISBN号码已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    } else {\n      return false;\n    }\n  });\n};\n\n// 编辑图书对话框\nlet editBookFormVisible = ref(false);\nconst editFromButton = (formEl: FormInstance | undefined, row: any) => {\n  editBookFormVisible.value = true;\n  editBookForm = reactive(JSON.parse(JSON.stringify(row)));\n  editBookForm.isbn = Number(row.isbn);\n  if (!formEl) return;\n  formEl.resetFields();\n};\n\n// 编辑图书表单\nconst editBookFormRef = ref<FormInstance>();\nlet editBookForm = reactive({\n  groups: \"\",\n  name: \"\",\n  author: \"\",\n  press: \"\",\n  price: \"\",\n  quantity: \"\",\n  isbn: \"\",\n});\n\n// 编辑图书按钮\nconst editBookButton = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\"http://202.194.7.29:22223/book/update\", editBookForm)\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n\n          // 编辑失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"编辑图书失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 编辑成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"编辑成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                editBookFormVisible.value = false;\n              },\n            });\n          }\n          // ISBN号码存在\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"编辑失败，此ISBN号码已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    } else {\n      return false;\n    }\n  });\n};\n\n// 删除图书\nlet deleteName = ref(\"\");\nlet deleteId = ref(0);\nlet deleteBookDialogVisible = ref(false);\nconst deleteBookDialog = (row: any) => {\n  deleteId.value = row.id;\n  deleteName.value = row.name;\n  deleteBookDialogVisible.value = true;\n};\n\n// 删除图书按钮\nconst deleteBook = () => {\n  if (deleteId.value) {\n    axios\n      .post(\"http://202.194.7.29:22223/book/delete/\" + deleteId.value)\n      .then((resp) => {\n        const statusCode = resp.data.statusCode;\n\n        // 删除失败\n        if (statusCode == 0) {\n          ElMessageBox.alert(\"删除图书失败，请重试\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n        // 删除成功\n        if (statusCode == 1) {\n          ElMessageBox.alert(\"删除成功\", \"信息\", {\n            confirmButtonText: \"确认\",\n            callback: () => {\n              deleteBookDialogVisible.value = false;\n            },\n          });\n        }\n        // Id 不存在\n        if (statusCode == 2) {\n          ElMessageBox.alert(\"删除失败，此 Id 不存在\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n      });\n  }\n};\n\n// 初始化\nconst init = () => {\n  // 获取图书\n  getBook();\n  // 获取图书种类\n  getBookType();\n};\ninit();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/book\";\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\views\\BorrowView.vue",[],"C:\\LibraryManage\\Library-UI\\library\\src\\views\\SystemView.vue",[],"C:\\LibraryManage\\Library-UI\\library\\src\\views\\NavViewUser.vue",["125"],"<template>\n  <div class=\"navUser\">\n    <el-container class=\"layout-container-demo\" style=\"height: 100%\">\n      <el-aside>\n        <!-- 导航栏 -->\n        <el-scrollbar>\n          <div class=\"title\"><p>图书管理系统</p></div>\n          <el-menu router :default-active=\"currentRoute.path\" unique-opened>\n            <el-menu-item\n              v-for=\"(item, index) in routes\"\n              :key=\"index\"\n              :index=\"item.path\"\n              @click=\"addTab(item.name, item.path)\"\n            >\n              <el-icon v-if=\"item.name === '图书信息'\"><Reading /></el-icon>\n              <el-icon v-if=\"item.name === '用户信息'\"><User /></el-icon>\n              <p>{{ item.name }}</p>\n            </el-menu-item>\n            <el-menu-item @click=\"loginOut\">\n              <el-icon><Back /></el-icon>退出系统\n            </el-menu-item>\n          </el-menu>\n        </el-scrollbar>\n      </el-aside>\n\n      <el-main>\n        <!-- 用户信息工具栏 -->\n        <div class=\"toolbar\">\n          <span>{{ userInfo.username }}</span>\n          <el-dropdown>\n            <el-icon><Setting /></el-icon>\n            <template #dropdown>\n              <el-dropdown-menu>\n                <el-dropdown-item @click=\"loginOut\">登出</el-dropdown-item>\n              </el-dropdown-menu>\n            </template>\n          </el-dropdown>\n        </div>\n        <!-- 标签栏 -->\n        <div class=\"tabs\">\n          <el-tabs\n            v-model=\"editableTabsValue\"\n            @tab-click=\"tabClick\"\n            @tab-remove=\"tabRemove\"\n          >\n            <el-tab-pane\n              v-for=\"item in editableTabs\"\n              :label=\"item.name\"\n              :key=\"item.path\"\n              :name=\"item.path\"\n              :closable=\"item.closable\"\n            >\n              <router-view :key=\"currentRoute.fullPath\"></router-view>\n            </el-tab-pane>\n          </el-tabs>\n        </div>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, onMounted } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport { Reading, User, Setting, Back } from \"@element-plus/icons-vue\";\nimport { ElMessageBox } from \"element-plus\";\nimport jsCookie from \"js-cookie\";\n\n// 获取路由实例和当前路由\nconst router = useRouter();\nconst currentRoute = useRoute();\n\n// 判断用户登录状态\nconst userLoginState = jsCookie.get(\"username\");\nif (userLoginState == undefined) {\n  ElMessageBox.alert(\"登录信息已过期，请重新登录\", \"信息\", {\n    confirmButtonText: \"确认\",\n    callback: () => {\n      // 页面跳转\n      router.push(\"/login\");\n    },\n  });\n}\n\n// 用户信息\nconst userInfo = ref({\n  username: jsCookie.get(\"username\"),\n});\n\n// 退出系统\nconst loginOut = () => {\n  ElMessageBox.alert(\"您已成功登出\", \"信息\", {\n    confirmButtonText: \"确认\",\n    callback: () => {\n      // 页面跳转\n      router.push(\"/loginUser\");\n      // 删除cookie\n      jsCookie.remove(\"username\");\n    },\n  });\n};\n\n// 路由配置\nconst routes = [\n  // 假设这是从某个地方获取的路由配置\n  { name: \"图书信息\", path: \"/bookUser\" },\n  { name: \"用户信息\", path: \"/userUser\" },\n];\n\n// 添加标签栏\nconst addTab = (name: string, path: string) => {\n  let isExist = false;\n  for (const item of editableTabs.value) {\n    if (item.name === name && item.path === path) {\n      isExist = true;\n      break;\n    }\n  }\n  if (!isExist) {\n    editableTabs.value.push({\n      name: name,\n      path: path,\n      closable: true,\n    });\n  }\n  editableTabsValue.value = path;\n};\n\n// 标签栏\nlet editableTabsValue = ref(\"/bookUser\");\nconst editableTabs = ref([\n  {\n    name: \"图书信息\",\n    path: \"/bookUser\",\n    closable: false,\n  },\n]);\n\n// 点击标签栏\nconst tabClick = (tab: any) => {\n  router.push(tab.props.name);\n};\n\n// 移除标签栏\nconst tabRemove = (targetName: string) => {\n  const tabs = editableTabs.value;\n  let activeName = editableTabsValue.value;\n  if (activeName === targetName) {\n    tabs.forEach((tab, index) => {\n      if (tab.path === targetName) {\n        const nextTab = tabs[index + 1] || tabs[index - 1];\n        if (nextTab) {\n          activeName = nextTab.path;\n        }\n      }\n    });\n  }\n  router.push(activeName);\n  editableTabsValue.value = activeName;\n  editableTabs.value = tabs.filter((tab) => tab.path !== targetName);\n};\n\n// 标签初始化\nonMounted(() => {\n  addTab(currentRoute.name as string, currentRoute.path);\n});\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/navUser\";\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\views\\ReturnView.vue",["126"],"<template>\n  <div class=\"return\">\n    <el-container>\n      <el-main>\n        <!--        归还图书操作栏-->\n        <el-row class=\"return-header\">\n          <el-col :span=\"4\" class=\"search-page-pane\">\n            <el-select\n              v-model=\"pageSize\"\n              placeholder=\"数据显示\"\n              @change=\"changeSize\"\n              class=\"search-size\"\n            >\n              <el-option\n                v-for=\"item in sizeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              >\n              </el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"16\" class=\"search-input-pane\">\n            <el-row>\n              <el-col :span=\"18\">\n                <el-input\n                  placeholder=\"请输入搜索内容\"\n                  v-model=\"searchInput\"\n                  :suffix-icon=\"Search\"\n                  class=\"search-input\"\n                >\n                </el-input>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-button\n                  type=\"primary\"\n                  class=\"search-button\"\n                  @click=\"searchButton\"\n                >\n                  搜索\n                </el-button>\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n        <!--        归还图书表格栏-->\n        <el-row class=\"return-table\">\n          <el-col>\n            <el-table :data=\"borrows\" height=\"100%\" empty-text=\"没有数据\">\n              <el-table-column fixed prop=\"id\" label=\"Id\" width=\"50\" />\n              <el-table-column prop=\"bookName\" label=\"书名\" />\n              <el-table-column prop=\"isbn\" label=\"ISBN号码\" />\n              <el-table-column prop=\"username\" label=\"借阅人\" />\n              <el-table-column prop=\"idCard\" label=\"借阅卡号\" />\n              <el-table-column prop=\"borrowTime\" label=\"借阅时间\" />\n              <el-table-column prop=\"returnTime\" label=\"应归还时间\" />\n              <el-table-column fixed=\"right\" label=\"操作\">\n                <template #default=\"borrows\">\n                  <el-button @click=\"returnBookDialog(borrows.row)\" type=\"text\"\n                    >归还</el-button\n                  >\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n              background\n              v-model:current-page=\"pageNum\"\n              v-model:page-size=\"pageSize\"\n              layout=\"prev, pager, next\"\n              :total=\"pageTotal\"\n              @current-change=\"page\"\n            >\n            </el-pagination>\n          </el-col>\n        </el-row>\n        <!--        归还图书对话框-->\n        <el-dialog\n          v-model=\"returnBookDialogVisible\"\n          title=\"归还图书\"\n          width=\"500px\"\n        >\n          <span>确认归还 {{ returnName }}</span>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"returnBookDialogVisible = false\"\n                >取消</el-button\n              >\n              <el-button type=\"primary\" @click=\"returnBook\"> 确认 </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { Search } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport { ElMessageBox } from \"element-plus\";\n\n// 借阅图书信息\nlet borrows = ref();\nconst getBorrow = () => {\n  axios\n    .get(\n      \"http://202.194.7.29:22223/borrow/\" + pageNum.value + \"/\" + pageSize.value\n    )\n    .then((resp) => {\n      borrows.value = resp.data.content;\n      pageTotal.value = resp.data.totalElements;\n    });\n};\n\n// 显示数据数量选项\nlet pageNum = ref(1);\nlet pageSize = ref(10);\nlet pageTotal = ref(0);\nconst page = (val: number) => {\n  pageNum.value = val;\n  if (searchInput.value == undefined) {\n    getBorrow();\n  } else {\n    searchBorrow();\n  }\n};\n\n// 数据显示框\nlet sizeOptions = [\n  {\n    value: 10,\n    label: \"10条数据/页\",\n  },\n  {\n    value: 50,\n    label: \"50条数据/页\",\n  },\n  {\n    value: 100,\n    label: \"100条数据/页\",\n  },\n];\n// 修改显示数据量\nconst changeSize = (value: number) => {\n  pageSize.value = value;\n  if (searchInput.value == undefined) {\n    getBorrow();\n  } else {\n    searchBorrow();\n  }\n};\n\n// 搜索框数据\nconst searchInput = ref();\n// 搜索框按钮\nconst searchButton = () => {\n  pageNum.value = 1;\n  searchBorrow();\n};\n// 搜索借阅信息\nconst searchBorrow = () => {\n  if (searchInput.value != \"\") {\n    axios\n      .get(\n        \"http://202.194.7.29:22223/borrow/search/\" +\n          searchInput.value +\n          \"/\" +\n          pageNum.value +\n          \"/\" +\n          pageSize.value\n      )\n      .then((resp) => {\n        borrows.value = resp.data.content;\n        pageTotal.value = resp.data.totalElements;\n      });\n  } else {\n    getBorrow();\n  }\n};\n\n// 归还图书\nlet returnName = ref(\"\");\nlet returnId = ref(0);\nlet returnBookDialogVisible = ref(false);\nconst returnBookDialog = (row: any) => {\n  returnId.value = row.id;\n  returnName.value = row.bookName;\n  returnBookDialogVisible.value = true;\n};\nconst returnBook = () => {\n  if (returnId.value) {\n    axios\n      .post(\"http://202.194.7.29:22223/borrow/return/\" + returnId.value)\n      .then((resp) => {\n        const statusCode = resp.data.statusCode;\n\n        // 归还失败\n        if (statusCode == 0) {\n          ElMessageBox.alert(\"归还图书失败，请重试\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n        // 归还成功\n        if (statusCode == 1) {\n          ElMessageBox.alert(\"归还图书成功\", \"信息\", {\n            confirmButtonText: \"确认\",\n            callback: () => {\n              returnBookDialogVisible.value = false;\n            },\n          });\n        }\n        // 借阅记录不存在\n        if (statusCode == 2) {\n          ElMessageBox.alert(\"归还失败，此借阅记录不存在\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n      });\n  }\n};\n\n// 初始化\nconst init = () => {\n  getBorrow();\n};\ninit();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/return\";\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\views\\UserView.vue",["127","128"],"<template>\n  <div class=\"user\">\n    <el-container>\n      <el-main>\n        <!--        用户操作栏-->\n        <el-row class=\"user-header\">\n          <el-col :span=\"4\" class=\"search-page-pane\">\n            <el-select\n              v-model=\"pageSize\"\n              placeholder=\"数据显示\"\n              @change=\"changeSize\"\n              class=\"search-size\"\n            >\n              <el-option\n                v-for=\"item in sizeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              >\n              </el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"16\" class=\"search-input-pane\">\n            <el-row>\n              <el-col :span=\"4\">\n                <el-select\n                  v-model=\"searchModel\"\n                  placeholder=\"搜索类型\"\n                  @change=\"changeSearch\"\n                  class=\"search-size\"\n                >\n                  <el-option\n                    v-for=\"item in searchOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n              <el-col :span=\"14\">\n                <el-input\n                  placeholder=\"请输入搜索内容\"\n                  v-model=\"searchInput\"\n                  :suffix-icon=\"Search\"\n                  class=\"search-input\"\n                >\n                </el-input>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-button\n                  type=\"primary\"\n                  class=\"search-button\"\n                  @click=\"searchButton\"\n                >\n                  搜索\n                </el-button>\n              </el-col>\n            </el-row>\n          </el-col>\n          <el-col :span=\"4\" class=\"add-button-pane\">\n            <el-button\n              type=\"success\"\n              :icon=\"Plus\"\n              class=\"add-button\"\n              @click=\"addFromButton(addUserFormRef)\"\n            >\n              添加用户\n            </el-button>\n          </el-col>\n        </el-row>\n        <!--        用户表格栏-->\n        <el-row class=\"user-table\">\n          <el-col>\n            <el-table :data=\"users\" height=\"100%\" empty-text=\"没有数据\">\n              <el-table-column fixed prop=\"id\" label=\"Id\" width=\"50\" />\n              <el-table-column prop=\"groups\" label=\"组名\" />\n              <el-table-column prop=\"username\" label=\"用户名\" />\n              <el-table-column prop=\"name\" label=\"姓名\" />\n              <el-table-column prop=\"gender\" label=\"性别\" />\n              <el-table-column prop=\"idCard\" label=\"借书卡号\" />\n              <el-table-column prop=\"phone\" label=\"手机号\" />\n              <el-table-column prop=\"identity\" label=\"身份\" />\n              <el-table-column prop=\"bookCount\" label=\"可借书数量\" />\n              <el-table-column prop=\"state\" label=\"用户状态\">\n                <template #default=\"users\">\n                  <span v-if=\"users.row.state === 1\">正常</span>\n                  <span v-if=\"users.row.state === 0\">冻结</span>\n                </template>\n              </el-table-column>\n              <el-table-column fixed=\"right\" label=\"操作\">\n                <template #default=\"users\">\n                  <el-button\n                    @click=\"editFromButton(editUserFormRef, users.row)\"\n                    v-if=\"users.row.id !== 1\"\n                    type=\"text\"\n                    >编辑</el-button\n                  >\n                  <el-button\n                    @click=\"deleteUserDialog(users.row)\"\n                    v-if=\"users.row.id !== 1\"\n                    type=\"text\"\n                    >删除</el-button\n                  >\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n              background\n              v-model:current-page=\"pageNum\"\n              v-model:page-size=\"pageSize\"\n              layout=\"prev, pager, next\"\n              :total=\"pageTotal\"\n              @current-change=\"page\"\n            >\n            </el-pagination>\n          </el-col>\n        </el-row>\n\n        <!--         添加用户表单 -->\n        <el-dialog\n          v-model=\"addUserFormVisible\"\n          title=\"添加用户\"\n          class=\"add-user-dialog\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <el-form\n            :model=\"addUserForm\"\n            :rules=\"userRules\"\n            ref=\"addUserFormRef\"\n            class=\"add-user-form\"\n          >\n            <el-form-item\n              label=\"所属组\"\n              :label-width=\"formLabelWidth\"\n              prop=\"groups\"\n            >\n              <el-select\n                v-model=\"addUserForm.groups\"\n                placeholder=\"请选择所属组\"\n              >\n                <el-option\n                  v-for=\"item in UserType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.label\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"用户名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"username\"\n            >\n              <el-input\n                v-model=\"addUserForm.username\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"密码\"\n              :label-width=\"formLabelWidth\"\n              prop=\"password\"\n            >\n              <el-input\n                v-model=\"addUserForm.password\"\n                type=\"password\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"姓名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"name\"\n            >\n              <el-input\n                v-model=\"addUserForm.name\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"性别\"\n              :label-width=\"formLabelWidth\"\n              prop=\"gender\"\n            >\n              <el-select v-model=\"addUserForm.gender\" placeholder=\"请选择性别\">\n                <el-option\n                  v-for=\"item in GenderType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.typeName\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"借书卡号\"\n              :label-width=\"formLabelWidth\"\n              prop=\"idCard\"\n            >\n              <el-input\n                v-model.number=\"addUserForm.idCard\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"手机号\"\n              :label-width=\"formLabelWidth\"\n              prop=\"phone\"\n            >\n              <el-input\n                v-model.number=\"addUserForm.phone\"\n                autocomplete=\"off\"\n                maxlength=\"11\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"身份\"\n              :label-width=\"formLabelWidth\"\n              prop=\"identity\"\n            >\n              <el-select\n                v-model=\"addUserForm.identity\"\n                placeholder=\"请选择身份\"\n              >\n                <el-option\n                  v-for=\"item in IdentityType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.typeName\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"addUserFormVisible = false\">取消</el-button>\n              <el-button type=\"primary\" @click=\"addUserButton(addUserFormRef)\">\n                添加\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n        <!--        编辑用户表单-->\n        <el-dialog\n          v-model=\"editUserFormVisible\"\n          title=\"添加用户\"\n          class=\"edit-user-dialog\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <el-form\n            :model=\"editUserForm\"\n            :rules=\"userRules\"\n            ref=\"editUserFormRef\"\n            class=\"edit-user-form\"\n          >\n            <el-form-item\n              label=\"所属组\"\n              :label-width=\"formLabelWidth\"\n              prop=\"groups\"\n            >\n              <el-select\n                v-model=\"editUserForm.groups\"\n                placeholder=\"请选择所属组\"\n              >\n                <el-option\n                  v-for=\"item in UserType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.label\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"用户名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"username\"\n            >\n              <el-input\n                v-model=\"editUserForm.username\"\n                autocomplete=\"off\"\n                disabled\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"密码\"\n              :label-width=\"formLabelWidth\"\n              prop=\"password\"\n            >\n              <el-input\n                v-model=\"editUserForm.password\"\n                type=\"password\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"姓名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"name\"\n            >\n              <el-input\n                v-model=\"editUserForm.name\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"性别\"\n              :label-width=\"formLabelWidth\"\n              prop=\"gender\"\n            >\n              <el-select v-model=\"editUserForm.gender\" placeholder=\"请选择性别\">\n                <el-option\n                  v-for=\"item in GenderType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.label\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"借书卡号\"\n              :label-width=\"formLabelWidth\"\n              prop=\"idCard\"\n            >\n              <el-input\n                v-model.number=\"editUserForm.idCard\"\n                autocomplete=\"off\"\n                disabled\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"手机号\"\n              :label-width=\"formLabelWidth\"\n              prop=\"phone\"\n            >\n              <el-input\n                v-model.number=\"editUserForm.phone\"\n                autocomplete=\"off\"\n                maxlength=\"11\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"身份\"\n              :label-width=\"formLabelWidth\"\n              prop=\"identity\"\n            >\n              <el-select\n                v-model=\"editUserForm.identity\"\n                placeholder=\"请选择身份\"\n              >\n                <el-option\n                  v-for=\"item in IdentityType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.typeName\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"借书数量\"\n              :label-width=\"formLabelWidth\"\n              prop=\"bookCount\"\n            >\n              <el-input\n                v-model.number=\"editUserForm.bookCount\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"账号状态\"\n              :label-width=\"formLabelWidth\"\n              prop=\"state\"\n            >\n              <el-select\n                v-model=\"editUserForm.state\"\n                placeholder=\"选择账号状态\"\n              >\n                <el-option\n                  v-for=\"item in StateType\"\n                  :key=\"item.id\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"editUserFormVisible = false\">取消</el-button>\n              <el-button\n                type=\"primary\"\n                @click=\"editUserButton(editUserFormRef)\"\n              >\n                编辑\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n        <!--        删除用户对话框-->\n        <el-dialog\n          v-model=\"deleteUserDialogVisible\"\n          title=\"删除用户\"\n          width=\"500px\"\n        >\n          <span>确认删除 {{ deleteName }}</span>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"deleteUserDialogVisible = false\"\n                >取消</el-button\n              >\n              <el-button type=\"danger\" @click=\"deleteUser\"> 确认 </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive, ref } from \"vue\";\nimport type { FormInstance, FormRules } from \"element-plus\";\nimport { Plus, Search } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport { ElMessageBox } from \"element-plus\";\n\n// 标签长度\nlet formLabelWidth = 120;\n\n// 获取用户数据\nlet users = ref();\nconst getUser = () => {\n  axios\n    .get(\n      \"http://202.194.7.29:22223/user/\" + pageNum.value + \"/\" + pageSize.value\n    )\n    .then((resp) => {\n      console.log(resp);\n      users.value = resp.data.content;\n      pageTotal.value = resp.data.totalElements;\n    });\n};\n\n// 显示数据数量选项\nlet pageNum = ref(1);\nlet pageSize = ref(10);\nlet pageTotal = ref(0);\nconst page = (val: number) => {\n  pageNum.value = val;\n  if (searchInput.value == undefined) {\n    getUser();\n  } else {\n    searchUser();\n  }\n};\n\n// 数据显示框\nlet sizeOptions = [\n  {\n    value: 10,\n    label: \"10条数据/页\",\n  },\n  {\n    value: 50,\n    label: \"50条数据/页\",\n  },\n  {\n    value: 100,\n    label: \"100条数据/页\",\n  },\n];\n// 修改显示数据量\nconst changeSize = (value: number) => {\n  pageSize.value = value;\n  if (searchInput.value == undefined) {\n    getUser();\n  } else {\n    searchUser();\n  }\n};\n\n// 搜索框选项\nlet searchModel = ref(\"username\");\nlet searchOptions = [\n  {\n    value: \"username\",\n    label: \"用户名\",\n  },\n  {\n    value: \"idCard\",\n    label: \"借书卡号\",\n  },\n  {\n    value: \"phone\",\n    label: \"手机号\",\n  },\n];\nconst changeSearch = (value: string) => {\n  searchModel.value = value;\n};\n\n// 搜索框数据\nconst searchInput = ref();\n// 搜索框按钮\nconst searchButton = () => {\n  pageNum.value = 1;\n  searchUser();\n};\n// 搜索用户\nconst searchUser = () => {\n  if (searchInput.value != \"\") {\n    axios\n      .get(\n        \"http://202.194.7.29:22223/user/search/\" +\n          searchModel.value +\n          \"/\" +\n          searchInput.value +\n          \"/\" +\n          pageNum.value +\n          \"/\" +\n          pageSize.value\n      )\n      .then((resp) => {\n        users.value = resp.data.content;\n        pageTotal.value = resp.data.totalElements;\n      });\n  } else {\n    getUser();\n  }\n};\n\n// 用户表单判断\nconst userRules = reactive<FormRules>({\n  groups: [{ required: true, message: \"请选择组名称\", trigger: \"change\" }],\n  username: [{ required: true, message: \"请输入用户名称\", trigger: \"blur\" }],\n  password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\n  name: [{ required: true, message: \"请输入用户姓名\", trigger: \"blur\" }],\n  gender: [{ required: true, message: \"请选择性别\", trigger: \"change\" }],\n  idCard: [{ required: true, message: \"请输入借书卡号\", trigger: \"blur\" }],\n  phone: [{ required: true, message: \"请输入手机号\", trigger: \"blur\" }],\n  identity: [{ required: true, message: \"请选择身份\", trigger: \"change\" }],\n  bookCount: [\n    { required: true, message: \"请输入可借阅图书数量\", trigger: \"blur\" },\n  ],\n  state: [{ required: true, message: \"请选择账号状态\", trigger: \"change\" }],\n});\n\n// 选项框属性\nconst UserType = ref([\n  {\n    typeId: 1,\n    typeName: \"admin\",\n    label: \"管理员\",\n  },\n  {\n    typeId: 2,\n    typeName: \"user\",\n    label: \"用户\",\n  },\n]);\nconst GenderType = ref([\n  {\n    typeId: 1,\n    typeName: \"男\",\n  },\n  {\n    typeId: 2,\n    typeName: \"女\",\n  },\n]);\nconst IdentityType = ref([\n  {\n    typeId: 1,\n    typeName: \"管理员\",\n  },\n  {\n    typeId: 2,\n    typeName: \"学生\",\n  },\n  {\n    typeId: 3,\n    typeName: \"教师\",\n  },\n]);\nconst StateType = ref([\n  {\n    id: 1,\n    value: 1,\n    label: \"正常\",\n  },\n  {\n    id: 2,\n    value: 0,\n    label: \"冻结\",\n  },\n]);\n\n// 添加用户对话框显示\nlet addUserFormVisible = ref(false);\n// 添加用户表单按钮\nconst addFromButton = (formEl: FormInstance | undefined) => {\n  addUserFormVisible.value = true;\n  if (!formEl) return;\n  formEl.resetFields();\n};\n\n// 添加用户表单\nconst addUserFormRef = ref<FormInstance>();\nlet addUserForm = reactive({\n  groups: \"\",\n  username: \"\",\n  password: \"\",\n  name: \"\",\n  gender: \"\",\n  idCard: \"\",\n  phone: \"\",\n  identity: \"\",\n});\n\n// 添加用户按钮\nconst addUserButton = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\"http://202.194.7.29:22223/user/save\", addUserForm)\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n\n          // 添加失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"添加用户失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 添加成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"添加成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                addUserFormVisible.value = false;\n              },\n            });\n          }\n          // 用户名存在\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"添加失败，此用户名已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 借书卡存在\n          if (statusCode == 3) {\n            ElMessageBox.alert(\"添加失败，此借书卡已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 手机号存在\n          if (statusCode == 4) {\n            ElMessageBox.alert(\"添加失败，此手机号已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    } else {\n      return false;\n    }\n  });\n};\n\n// 编辑用户对话框\nlet editUserFormVisible = ref(false);\nconst editFromButton = (formEl: FormInstance | undefined, row: number) => {\n  editUserFormVisible.value = true;\n  editUserForm = reactive(JSON.parse(JSON.stringify(row)));\n  if (!formEl) return;\n  formEl.resetFields();\n};\n\n// 编辑用户表单\nconst editUserFormRef = ref<FormInstance>();\nlet editUserForm = reactive({\n  groups: \"\",\n  username: \"\",\n  password: \"\",\n  name: \"\",\n  gender: \"\",\n  idCard: \"\",\n  phone: \"\",\n  identity: \"\",\n  bookCount: 0,\n  state: 1,\n});\n\n// 编辑用户按钮\nconst editUserButton = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\"http://202.194.7.29:22223/user/update\", editUserForm)\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n\n          // 编辑失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"编辑用户失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 编辑成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"编辑成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                editUserFormVisible.value = false;\n              },\n            });\n          }\n          // 手机号\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"编辑失败，此手机号已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    } else {\n      return false;\n    }\n  });\n};\n\n// 删除用户\nlet deleteName = ref(\"\");\nlet deleteId = ref(0);\nlet deleteUserDialogVisible = ref(false);\nconst deleteUserDialog = (row: any) => {\n  deleteId.value = row.id;\n  deleteName.value = row.username;\n  deleteUserDialogVisible.value = true;\n};\n\n// 删除用户按钮\nconst deleteUser = () => {\n  if (deleteId.value) {\n    axios\n      .post(\"http://202.194.7.29:22223/user/delete/\" + deleteId.value)\n      .then((resp) => {\n        const statusCode = resp.data.statusCode;\n\n        // 删除失败\n        if (statusCode == 0) {\n          ElMessageBox.alert(\"删除用户失败，请重试\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n        // 删除成功\n        if (statusCode == 1) {\n          ElMessageBox.alert(\"删除成功\", \"信息\", {\n            confirmButtonText: \"确认\",\n            callback: () => {\n              deleteUserDialogVisible.value = false;\n            },\n          });\n        }\n        // Id 不存在\n        if (statusCode == 2) {\n          ElMessageBox.alert(\"删除失败，此 Id 不存在\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n      });\n  }\n};\n\n// 初始化\nconst init = () => {\n  getUser();\n};\ninit();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/user\";\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\views\\UserViewUser.vue",["129"],"<template>\n  <div class=\"userUser\">\n    <el-container>\n      <el-main>\n        <!--        用户信息面板-->\n        <el-row class=\"user-card\">\n          <el-col :span=\"6\" class=\"user-info\">\n            <el-image :src=\"imageUrl\" class=\"user-img\"></el-image>\n            <p class=\"name\">用户名称：{{ user.name }}</p>\n            <p class=\"idCard\">借书卡号：{{ user.idCard }}</p>\n            <p class=\"phone\">手机号：{{ user.phone }}</p>\n            <p class=\"identity\">身份：{{ user.identity }}</p>\n            <p class=\"bookCount\">可借阅图书数量：{{ user.bookCount }}</p>\n            <el-button\n              type=\"primary\"\n              @click=\"updatePasswordDialog(updatePasswordFormRef)\"\n              >修改密码</el-button\n            >\n          </el-col>\n          <el-col :span=\"18\" class=\"user-book\">\n            <p class=\"title\">当前借阅图书列表</p>\n            <el-table :data=\"books\" empty-text=\"当前无借阅\" class=\"book-table\">\n              <el-table-column prop=\"bookName\" label=\"书名\" />\n              <el-table-column prop=\"isbn\" label=\"ISBN号码\" />\n              <el-table-column prop=\"borrowTime\" label=\"借阅时间\" />\n              <el-table-column prop=\"returnTime\" label=\"应归还时间\" />\n            </el-table>\n          </el-col>\n        </el-row>\n        <!--        更改密码对话框-->\n        <el-dialog\n          v-model=\"updatePasswordDialogVisible\"\n          title=\"更改密码\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <el-form\n            :model=\"updatePasswordForm\"\n            :rules=\"updatePasswordRules\"\n            ref=\"updatePasswordFormRef\"\n            class=\"update-password-form\"\n          >\n            <el-form-item label=\"原密码\" label-width=\"100px\" prop=\"oldPassword\">\n              <el-input\n                v-model=\"updatePasswordForm.oldPassword\"\n                type=\"password\"\n                placeholder=\"原密码\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item label=\"新密码\" label-width=\"100px\" prop=\"newPassword\">\n              <el-input\n                v-model=\"updatePasswordForm.newPassword\"\n                type=\"password\"\n                placeholder=\"新密码\"\n              ></el-input>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"updatePasswordDialogVisible = false\"\n                >取消</el-button\n              >\n              <el-button\n                type=\"primary\"\n                @click=\"updatePassword(updatePasswordFormRef)\"\n              >\n                修改\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive, ref } from \"vue\";\nimport type { FormInstance, FormRules } from \"element-plus\";\nimport { ElMessageBox } from \"element-plus\";\nimport axios from \"axios\";\nimport jsCookie from \"js-cookie\";\n\n// 用户头像\nlet imageUrl;\nimageUrl = require(\"../assets/images/user.jpg\");\n\n// 用户名\nlet username = jsCookie.get(\"username\");\nlet user = ref({\n  name: \"\",\n  idCard: \"\",\n  phone: \"\",\n  identity: \"\",\n  bookCount: \"\",\n});\n// 获取用户信息\nconst getUserInfo = () => {\n  axios.get(\"http://202.194.7.29:22223/user/get/\" + username).then((resp) => {\n    user.value = resp.data;\n    console.log(resp.data);\n  });\n};\n\n// 借阅图书信息\nlet books = ref();\nconst getBooks = () => {\n  axios.get(\"http://202.194.7.29:22223/borrow/get/\" + username).then((resp) => {\n    books.value = resp.data;\n  });\n};\n\n// 更改密码对话框\nlet updatePasswordDialogVisible = ref(false);\nconst updatePasswordDialog = (formEl: FormInstance | undefined) => {\n  updatePasswordDialogVisible.value = true;\n  if (!formEl) return;\n  formEl.resetFields();\n};\n\n// 更改密码表单规则\nconst updatePasswordRules = ref<FormRules>({\n  oldPassword: [{ required: true, message: \"请输入旧密码\", trigger: \"blur\" }],\n  newPassword: [{ required: true, message: \"请输入新密码\", trigger: \"blur\" }],\n});\n\n// 更改密码表单\nconst updatePasswordFormRef = ref<FormInstance>();\nlet updatePasswordForm = reactive({\n  oldPassword: \"\",\n  newPassword: \"\",\n});\n\n// 修改密码\nconst updatePassword = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\n          \"http://202.194.7.29:22223/user/update/user/\" + username,\n          updatePasswordForm\n        )\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n          // 修改失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"修改密码失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 修改成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"修改成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                updatePasswordDialogVisible.value = false;\n              },\n            });\n          }\n          // 密码不一致\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"原密码不一致，修改失败\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    }\n  });\n};\n\n// 初始化\nconst init = () => {\n  // 获取用户信息\n  getUserInfo();\n  // 获取借阅图书信息\n  getBooks();\n};\ninit();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/userUser\";\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\views\\BookViewUser.vue",[],"C:\\LibraryManage\\Library-UI\\library\\src\\views\\LoginViewUser.vue",["130","131"],"<template>\n  <div class=\"body\">\n    <div class=\"header\">\n      <h1 class=\"title\">{{ title }}</h1>\n      <!-- 使用动态数据绑定 -->\n      <div class=\"identity-switch\">\n        <button @click=\"switchToReader\">切换到读者</button>\n        <button @click=\"switchToAdmin\">切换到管理员</button>\n      </div>\n    </div>\n\n    <div class=\"main\">\n      <SwitchView />\n      <SignIn :role=\"userRole\" />\n      <SignUp />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\"; // 引入 ref\nimport SwitchView from \"@/logincomponents/SwitchView.vue\";\nimport SignIn from \"@/logincomponents/Sign-in-user\";\nimport SignUp from \"@/logincomponents/Sign-up-user.vue\";\nimport router from \"@/router\";\n// 定义响应式数据\nconst title = ref(\"你好，读者\"); // 初始标题\nconst userRole = ref(\"reader\");\nconst switchToReader = () => {\n  title.value = \"你好，读者\";\n  router.push(\"/loginUser\");\n  userRole.value = \"reader\";\n\n  console.log(\"切换到读者\");\n};\n\nconst switchToAdmin = () => {\n  router.push(\"/LoginTest\");\n  userRole.value = \"admin\";\n  title.value = \"您好，管理员\"; // 切换到管理员时更新标题\n  console.log(\"切换到管理员\");\n};\n</script>\n\n<style scoped>\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  user-select: none;\n}\n\n.body {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column; /* 使内容垂直排列 */\n  justify-content: flex-start; /* 从顶部开始对齐 */\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 12px;\n  color: #a0a5a8;\n  background: url(\"~@/assets/images/backgroud.jpg\") 100% no-repeat;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 5px; /* 加一些内边距 */\n  background-color: hsl(210, 100%, 63%); /* 背景颜色 */\n}\n\n.title {\n  color: white; /* 字体颜色 */\n  margin: 0; /* 去掉默认边距 */\n}\n\n.identity-switch button {\n  background-color: white;\n  color: hsl(210, 100%, 63%);\n  border: none;\n  padding: 10px 15px;\n  margin-left: 10px;\n  cursor: pointer;\n  border-radius: 5px; /* 圆角按钮 */\n}\n\n.identity-switch button:hover {\n  background-color: #e0e0e0; /* 悬停时的背景颜色 */\n}\n\n.main {\n  margin: 40px auto;\n  background-color: rgba(236, 240, 243, 0.7);\n  position: relative;\n  width: 1000px;\n  min-width: 1000px;\n  min-height: 600px;\n  height: 600px;\n  padding: 25px;\n  background-color: #ecf0f3;\n  box-shadow: none;\n  border-radius: 20px;\n  overflow: hidden;\n}\n\n@media (max-width: 1200px) {\n  .main {\n    transform: scale(0.7);\n  }\n}\n@media (max-width: 1000px) {\n  .main {\n    transform: scale(0.6);\n  }\n}\n@media (max-width: 800px) {\n  .main {\n    transform: scale(0.5);\n  }\n}\n@media (max-width: 600px) {\n  .main {\n    transform: scale(0.4);\n  }\n}\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\Sign-in.vue",["132","133","134"],"C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\SwitchView.vue",["135","136","137"],"<template>\n  <div class=\"switch\" id=\"switch-cnt\">\n    <div class=\"switch__container is-hidden\" id=\"switch-c1\">\n      <h2 class=\"switch__title title\">欢迎回来 !</h2>\n\n      <button class=\"switch__button button switch-btn\" @click=\"change\">\n        登录\n      </button>\n    </div>\n\n    <div class=\"switch__container\" id=\"switch-c2\">\n      <h2 class=\"switch__title title\">你好，朋友 !</h2>\n\n      <button class=\"switch__button button switch-btn\" @click=\"change\">\n        注册\n      </button>\n    </div>\n  </div>\n</template>\n<!-- 界面移动逻辑 -->\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport useEmitter from \"@/hooks/useloginEmitter.js\";\nimport type { FormInstance, FormRules } from \"element-plus\";\nimport { ElMessageBox } from \"element-plus\";\n\nconst sidebarOpen = ref(false);\nconst emitter = useEmitter();\n\nconst change = () => {\n  const switchC1 = document.querySelector(\"#switch-c1\") as HTMLDivElement;\n  const switchC2 = document.querySelector(\"#switch-c2\") as HTMLDivElement;\n  const switchCtn = document.querySelector(\"#switch-cnt\") as HTMLDivElement;\n\n  switchCtn.classList.toggle(\"is-txr\");\n  switchC1.classList.toggle(\"is-hidden\");\n  switchC2.classList.toggle(\"is-hidden\");\n  sidebarOpen.value = !sidebarOpen.value;\n  emitter.emit(\"change\", sidebarOpen.value);\n};\n</script>\n\n<style scoped>\n@import \"./login.css\";\n/* 将源码中的css样式单独存放,在各组件中导入就可以。*/\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\Sign-up.vue",[],"C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\Sign-up-user.vue",["138","139"],"<!-- sign_up -->\n\n<template>\n  <div class=\"container a-container\" id=\"a-container\">\n    <!--         添加用户表单 -->\n    <form class=\"form\" id=\"a-form\" method=\"\" action=\"\">\n      <h2 class=\"form_title title\">注册账号</h2>\n      <div class=\"form__icons\"></div>\n      <span class=\"form__span\"></span>\n      <el-form\n        ref=\"addUserFormRef\"\n        :model=\"addUserForm\"\n        :rules=\"userRules\"\n        class=\"add-user-form\"\n        @keyup.enter=\"addUserButton(addUserFormRef)\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input\n            class=\"form__input\"\n            v-model=\"addUserForm.username\"\n            autocomplete=\"off\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            class=\"form__input\"\n            v-model=\"addUserForm.password\"\n            type=\"password\"\n            autocomplete=\"off\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input\n            class=\"form__input\"\n            v-model=\"addUserForm.name\"\n            autocomplete=\"off\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"gender\">\n          <el-select v-model=\"addUserForm.gender\" placeholder=\"请选择性别\">\n            <el-option\n              v-for=\"item in GenderType\"\n              :key=\"item.typeId\"\n              :label=\"item.typeName\"\n              :value=\"item.typeName\"\n            >\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"借书卡号\" prop=\"idCard\">\n          <el-input\n            class=\"form__input\"\n            v-model.number=\"addUserForm.idCard\"\n            autocomplete=\"off\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input\n            class=\"form__input\"\n            v-model.number=\"addUserForm.phone\"\n            autocomplete=\"off\"\n            maxlength=\"11\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"身份\" prop=\"identity\">\n          <el-select v-model=\"addUserForm.identity\" placeholder=\"请选择身份\">\n            <el-option\n              v-for=\"item in IdentityType\"\n              :key=\"item.typeId\"\n              :label=\"item.typeName\"\n              :value=\"item.typeName\"\n            >\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            @click=\"addUserButton(addUserFormRef)\"\n            ref=\"addUserButtonRef\"\n            :disabled=\"registerState\"\n            class=\"form__button button submit\"\n            >注册</el-button\n          >\n        </el-form-item>\n      </el-form>\n    </form>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive, ref, onMounted } from \"vue\";\nimport useEmitter from \"@/hooks/useloginEmitter.js\";\nimport type { FormInstance, FormRules } from \"element-plus\";\nimport { ElMessageBox } from \"element-plus\";\nimport axios from \"axios\";\nimport router from \"@/router\";\n\nconst emitter = useEmitter();\nconst isOpen = ref(false); // 初始状态\n\nonMounted(() => {\n  emitter.on(\"change\", (newIsOpen: boolean) => {\n    isOpen.value = newIsOpen; // 更新响应式状态\n\n    // 切换样式\n    const aContainer = document.querySelector(\"#a-container\") as HTMLElement;\n    if (aContainer) {\n      aContainer.classList.toggle(\"is-txl\", isOpen.value); // 根据状态添加或移除类\n    }\n  });\n});\n\n//注册逻辑\nconst addUserButtonRef = ref();\nlet registerState = ref(false);\n\nconst addUserFormRef = ref<FormInstance>();\nconst addUserForm = reactive({\n  groups: \"user\",\n  username: \"\",\n  password: \"\",\n  name: \"\",\n  gender: \"\",\n  idCard: \"\",\n  phone: \"\",\n  identity: \"\",\n});\n\nconst userRules = reactive<FormRules>({\n  username: [{ required: true, message: \"请输入用户名称\", trigger: \"blur\" }],\n  password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\n  name: [{ required: true, message: \"请输入用户姓名\", trigger: \"blur\" }],\n  gender: [{ required: true, message: \"请选择性别\", trigger: \"change\" }],\n  idCard: [{ required: true, message: \"请输入借书卡号\", trigger: \"blur\" }],\n  phone: [{ required: true, message: \"请输入手机号\", trigger: \"blur\" }],\n  identity: [{ required: true, message: \"请选择身份\", trigger: \"change\" }],\n});\nconst addUserButton = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\"http://202.194.7.29:22223/user/save\", addUserForm)\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n\n          // 失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"注册失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"注册成功,请返回登录界面\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 用户名存在\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"注册失败，此用户名已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 借书卡存在\n          if (statusCode == 3) {\n            ElMessageBox.alert(\"注册失败，此借书卡已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 手机号存在\n          if (statusCode == 4) {\n            ElMessageBox.alert(\"注册失败，此手机号已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    } else {\n      return false;\n    }\n  });\n};\n\n// 选项框属性\nconst UserType = ref([\n  {\n    typeId: 2,\n    typeName: \"user\",\n    label: \"用户\",\n  },\n]);\nconst GenderType = ref([\n  {\n    typeId: 1,\n    typeName: \"男\",\n  },\n  {\n    typeId: 2,\n    typeName: \"女\",\n  },\n]);\nconst IdentityType = ref([\n  {\n    typeId: 2,\n    typeName: \"学生\",\n  },\n  {\n    typeId: 3,\n    typeName: \"教师\",\n  },\n]);\n</script>\n<style lang=\"scss\">\n@import \"../assets/css/user\";\n</style>\n<style scoped>\n@import \"./login.css\";\n/* 将源码中的css样式单独存放,在各组件中导入就可以。*/\n</style>\n\n<style scoped>\n.form__button {\n  margin-top: 0; /* 移除按钮顶部的默认间距 */\n}\n.el-select {\n  width: 100%; /* 确保下拉框宽度一致 */\n}\n\n.el-select .el-input {\n  width: 100%; /* 确保输入框宽度一致 */\n}\n\n/* 可选：增加性别和身份的下拉框宽度 */\n.gender-select,\n.identity-select {\n  min-width: 200px; /* 设置最小宽度，您可以根据需要调整 */\n}\n.container {\n  display: flex;\n  justify-content: center; /* 使按钮居中 */\n  align-items: center;\n  flex-direction: column; /* 垂直排列 */\n}\n\n.form__input {\n  width: 100%; /* 使输入框宽度一致 */\n}\n\n.form__button {\n  width: 100%; /* 使按钮宽度一致 */\n}\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\logincomponents\\Sign-in-user.vue",["140","141","142"],"<!-- sign_in -->\n<template>\n  <div class=\"container b-container\" id=\"b-container\">\n    <!-- 用户登录表单内容 -->\n    <form class=\"form\">\n      <h2 class=\"form_title title\">图书管理系统</h2>\n\n      <!-- 登录表单 -->\n\n      <div class=\"form__icons\"></div>\n      <span class=\"form__span\"></span>\n      <el-form\n        ref=\"loginFormRef\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        @keyup.enter=\"login(loginFormRef)\"\n      >\n        <el-form-item>\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"用户名\"\n            class=\"form__input\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item>\n          <el-input\n            type=\"password\"\n            v-model=\"loginForm.password\"\n            placeholder=\"密码\"\n            class=\"form__input\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"验证码\" label-width=\"70px\" prop=\"code\">\n          <div class=\"code-container\">\n            <el-input\n              v-model=\"dynamicValidateForm.code\"\n              placeholder=\"不区分大小写 点击刷新\"\n              class=\"form__input\"\n              style=\"flex: 1\"\n            ></el-input>\n            <img\n              :src=\"captchaImage\"\n              alt=\"图片无法加载\"\n              style=\"\"\n              @click=\"changeVerify()\"\n              class=\"captcha-img\"\n            />\n          </div>\n        </el-form-item>\n\n        <el-form-item>\n          <div class=\"button-container\">\n            <el-button\n              type=\"primary\"\n              @click=\"login(loginFormRef)\"\n              ref=\"loginButtonRef\"\n              :disabled=\"loginState\"\n              class=\"form__button button submit\"\n              >登录</el-button\n            >\n          </div>\n        </el-form-item>\n      </el-form>\n    </form>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, onMounted, watch } from \"vue\";\nimport useEmitter from \"@/hooks/useloginEmitter.js\";\nimport type { FormInstance, FormRules } from \"element-plus\";\nimport { ElMessageBox } from \"element-plus\";\nimport axios from \"axios\";\nimport jsCookie from \"js-cookie\";\nimport router from \"@/router\";\naxios.defaults.withCredentials = true;\n\nconst captchaImage = ref(\"\");\nconst dynamicValidateForm = ref({\n  code: \"\", // 用于接收验证码输入\n});\n// 状态管理\nconst emitter = useEmitter();\nconst isOpen = ref(false); // 初始状态\n\n// 监听事件\nonMounted(() => {\n  emitter.on(\"change\", (newIsOpen: boolean) => {\n    isOpen.value = newIsOpen; // 更新响应式状态\n    const bContainer = document.querySelector(\"#b-container\") as HTMLElement;\n    if (bContainer) {\n      bContainer.classList.toggle(\"is-txr\", isOpen.value);\n    }\n  });\n});\n\n// 登录表单\nconst loginButtonRef = ref();\nlet loginState = ref(false);\n\n// 登陆表单\nconst loginFormRef = ref<FormInstance>();\nconst loginForm = reactive({\n  username: \"张三\",\n  password: \"123456\",\n});\n\n// 表单校验\nconst loginRules = reactive<FormRules>({\n  username: [{ required: true, message: \"请输入用户名\", trigger: \"blur\" }],\n  password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\n});\n\n// 登录操作\nconst login = async (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate(async (valid) => {\n    if (valid && !loginState.value) {\n      loginState.value = true;\n\n      try {\n        // 验证验证码\n        const captchaValid = await checkCaptcha(dynamicValidateForm.value.code);\n        if (!captchaValid) {\n          await ElMessageBox.alert(\"验证码错误\", \"信息\", {\n            confirmButtonText: \"重试\",\n          });\n          loginState.value = false;\n          return;\n        }\n\n        // 发送客户端请求，用户信息作为请求体\n        const resp = await axios.post(\n          \"http://202.194.7.29:22223/login/user\",\n          loginForm,\n          {\n            params: { code: dynamicValidateForm.value.code }, // 如果需要将验证码作为查询参数发送\n          }\n        );\n\n        const statusCode = resp.data.statusCode;\n\n        switch (statusCode) {\n          case 0:\n            await ElMessageBox.alert(\"登录失败，账号或密码错误\", \"信息\", {\n              confirmButtonText: \"重试\",\n            });\n            break;\n          case 1:\n            await ElMessageBox.alert(\"登录成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                jsCookie.set(\"username\", resp.data.username, {\n                  expires: 1,\n                  path: \"/\",\n                });\n                router.push(\"/bookUser\");\n              },\n            });\n            break;\n          case 2:\n            await ElMessageBox.alert(\"登录失败，账号已被冻结\", \"信息\", {\n              confirmButtonText: \"确定\",\n            });\n            break;\n        }\n      } catch (error) {\n        console.error(\"登录请求出错:\", error);\n      } finally {\n        loginState.value = false;\n      }\n    }\n  });\n};\nconst checkCaptcha = async (captcha: string) => {\n  try {\n    const resp = await axios.post(\n      \"http://202.194.7.29:22223/code/verify/check\",\n      {\n        code: captcha,\n      }\n    );\n    return resp.data; // 返回布尔值\n  } catch (error) {\n    ElMessageBox.alert(\"验证码验证请求失败，请稍后再试\", \"错误\", {\n      confirmButtonText: \"确定\",\n    });\n    return false;\n  }\n};\nconst changeVerify = () => {\n  axios\n    .get(\"http://202.194.7.29:22223/code/verify\", {\n      responseType: \"arraybuffer\",\n    })\n    .then((response) => {\n      const imageBase64 = btoa(\n        new Uint8Array(response.data).reduce(\n          (data, byte) => data + String.fromCharCode(byte),\n          \"\"\n        )\n      );\n      captchaImage.value = `data:image/jpeg;base64,${imageBase64}`;\n    })\n    .catch((error) => {\n      console.error(\"Error fetching CAPTCHA:\", error);\n      ElMessageBox.alert(\"无法加载验证码，请重试\", \"错误\", {\n        confirmButtonText: \"确定\",\n      });\n    });\n};\n// 初始化页面时获取验证码\nchangeVerify();\n</script>\n<style lang=\"scss\">\n@import \"../assets/css/user\";\n</style>\n<style scoped>\n@import \"./login.css\";\n/* 将源码中的css样式单独存放,在各组件中导入就可以。*/\n/* 将源码中的css样式单独存放,在各组件中导入就可以。*/\n.el-select {\n  width: 100%; /* 确保下拉框宽度一致 */\n}\n\n.el-select .el-input {\n  width: 100%; /* 确保输入框宽度一致 */\n}\n.code-container {\n  justify-content: center; /* 使按钮居中 */\n  align-items: center;\n  display: flex;\n  align-items: center; /* 垂直对齐 */\n}\n\n.captcha-img {\n  margin-left: 15px; /* 根据需要调整间距 */\n  width: 100px; /* 设置你想要的宽度 */\n  height: auto; /* 保持图片的比例 */\n  border: 2px solid hsl(210, 100%, 63%); /* 添加红色边框，边框宽度为2px */\n  cursor: pointer; /* 确保图片可以被点击 */\n}\n.button-container {\n  display: flex;\n  justify-content: flex-end; /* 水平居中 */\n  height: 100%; /* 如果希望容器高度充满其父元素，可以添加此行（根据需要调整） */\n}\n.form__button.submit {\n  margin-left: 100px; /* 根据需要调整数值，以在按钮和容器右侧之间留出空间 */\n}\n</style>\n","C:\\LibraryManage\\Library-UI\\library\\src\\hooks\\useloginEmitter.js",[],{"ruleId":"143","severity":1,"message":"144","line":125,"column":23,"nodeType":"145","messageId":"146","endLine":125,"endColumn":26,"suggestions":"147"},{"ruleId":"143","severity":1,"message":"144","line":125,"column":34,"nodeType":"145","messageId":"146","endLine":125,"endColumn":37,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"144","line":161,"column":24,"nodeType":"145","messageId":"146","endLine":161,"endColumn":27,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":38,"column":3,"nodeType":"152","messageId":"153","endLine":38,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":45,"column":3,"nodeType":"152","messageId":"153","endLine":45,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":87,"column":10,"nodeType":"145","messageId":"146","endLine":87,"endColumn":13,"suggestions":"154"},{"ruleId":"143","severity":1,"message":"144","line":88,"column":10,"nodeType":"145","messageId":"146","endLine":88,"endColumn":13,"suggestions":"155"},{"ruleId":"143","severity":1,"message":"144","line":89,"column":10,"nodeType":"145","messageId":"146","endLine":89,"endColumn":13,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":91,"column":7,"nodeType":"159","messageId":"160","endLine":91,"endColumn":8},{"ruleId":"143","severity":1,"message":"144","line":191,"column":34,"nodeType":"145","messageId":"146","endLine":191,"endColumn":37,"suggestions":"161"},{"ruleId":"150","severity":1,"message":"151","line":194,"column":3,"nodeType":"152","messageId":"153","endLine":194,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":195,"column":3,"nodeType":"152","messageId":"153","endLine":195,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":351,"column":8,"nodeType":"159","messageId":"160","endLine":351,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":462,"column":26,"nodeType":"145","messageId":"146","endLine":462,"endColumn":29,"suggestions":"163"},{"ruleId":"143","severity":1,"message":"144","line":462,"column":38,"nodeType":"145","messageId":"146","endLine":462,"endColumn":41,"suggestions":"164"},{"ruleId":"143","severity":1,"message":"144","line":462,"column":53,"nodeType":"145","messageId":"146","endLine":462,"endColumn":56,"suggestions":"165"},{"ruleId":"143","severity":1,"message":"144","line":559,"column":64,"nodeType":"145","messageId":"146","endLine":559,"endColumn":67,"suggestions":"166"},{"ruleId":"143","severity":1,"message":"144","line":621,"column":32,"nodeType":"145","messageId":"146","endLine":621,"endColumn":35,"suggestions":"167"},{"ruleId":"143","severity":1,"message":"144","line":140,"column":24,"nodeType":"145","messageId":"146","endLine":140,"endColumn":27,"suggestions":"168"},{"ruleId":"143","severity":1,"message":"144","line":186,"column":32,"nodeType":"145","messageId":"146","endLine":186,"endColumn":35,"suggestions":"169"},{"ruleId":"150","severity":1,"message":"151","line":448,"column":7,"nodeType":"152","messageId":"153","endLine":448,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":746,"column":32,"nodeType":"145","messageId":"146","endLine":746,"endColumn":35,"suggestions":"170"},{"ruleId":"150","severity":1,"message":"151","line":101,"column":5,"nodeType":"152","messageId":"153","endLine":101,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":34,"column":3,"nodeType":"152","messageId":"153","endLine":34,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":41,"column":3,"nodeType":"152","messageId":"153","endLine":41,"endColumn":14},{"ruleId":"157","severity":1,"message":"171","line":70,"column":36,"nodeType":"159","messageId":"160","endLine":70,"endColumn":41},{"ruleId":"150","severity":1,"message":"151","line":169,"column":9,"nodeType":"152","messageId":"153","endLine":169,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":207,"column":7,"nodeType":"152","messageId":"153","endLine":207,"endColumn":20},{"ruleId":"157","severity":1,"message":"172","line":24,"column":15,"nodeType":"159","messageId":"160","endLine":24,"endColumn":27},{"ruleId":"157","severity":1,"message":"173","line":24,"column":29,"nodeType":"159","messageId":"160","endLine":24,"endColumn":38},{"ruleId":"157","severity":1,"message":"174","line":25,"column":10,"nodeType":"159","messageId":"160","endLine":25,"endColumn":22},{"ruleId":"157","severity":1,"message":"162","line":98,"column":8,"nodeType":"159","messageId":"160","endLine":98,"endColumn":14},{"ruleId":"157","severity":1,"message":"175","line":187,"column":7,"nodeType":"159","messageId":"160","endLine":187,"endColumn":15},{"ruleId":"157","severity":1,"message":"171","line":71,"column":36,"nodeType":"159","messageId":"160","endLine":71,"endColumn":41},{"ruleId":"150","severity":1,"message":"151","line":170,"column":9,"nodeType":"152","messageId":"153","endLine":170,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":208,"column":7,"nodeType":"152","messageId":"153","endLine":208,"endColumn":20},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["176","177"],["178","179"],["180","181"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["182","183"],["184","185"],["186","187"],"@typescript-eslint/no-unused-vars","'d' is assigned a value but never used.","Identifier","unusedVar",["188","189"],"'router' is defined but never used.",["190","191"],["192","193"],["194","195"],["196","197"],["198","199"],["200","201"],["202","203"],["204","205"],"'watch' is defined but never used.","'FormInstance' is defined but never used.","'FormRules' is defined but never used.","'ElMessageBox' is defined but never used.","'UserType' is assigned a value but never used.",{"messageId":"206","fix":"207","desc":"208"},{"messageId":"209","fix":"210","desc":"211"},{"messageId":"206","fix":"212","desc":"208"},{"messageId":"209","fix":"213","desc":"211"},{"messageId":"206","fix":"214","desc":"208"},{"messageId":"209","fix":"215","desc":"211"},{"messageId":"206","fix":"216","desc":"208"},{"messageId":"209","fix":"217","desc":"211"},{"messageId":"206","fix":"218","desc":"208"},{"messageId":"209","fix":"219","desc":"211"},{"messageId":"206","fix":"220","desc":"208"},{"messageId":"209","fix":"221","desc":"211"},{"messageId":"206","fix":"222","desc":"208"},{"messageId":"209","fix":"223","desc":"211"},{"messageId":"206","fix":"224","desc":"208"},{"messageId":"209","fix":"225","desc":"211"},{"messageId":"206","fix":"226","desc":"208"},{"messageId":"209","fix":"227","desc":"211"},{"messageId":"206","fix":"228","desc":"208"},{"messageId":"209","fix":"229","desc":"211"},{"messageId":"206","fix":"230","desc":"208"},{"messageId":"209","fix":"231","desc":"211"},{"messageId":"206","fix":"232","desc":"208"},{"messageId":"209","fix":"233","desc":"211"},{"messageId":"206","fix":"234","desc":"208"},{"messageId":"209","fix":"235","desc":"211"},{"messageId":"206","fix":"236","desc":"208"},{"messageId":"209","fix":"237","desc":"211"},{"messageId":"206","fix":"238","desc":"208"},{"messageId":"209","fix":"239","desc":"211"},"suggestUnknown",{"range":"240","text":"241"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"240","text":"242"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"243","text":"241"},{"range":"243","text":"242"},{"range":"244","text":"241"},{"range":"244","text":"242"},{"range":"245","text":"241"},{"range":"245","text":"242"},{"range":"246","text":"241"},{"range":"246","text":"242"},{"range":"247","text":"241"},{"range":"247","text":"242"},{"range":"248","text":"241"},{"range":"248","text":"242"},{"range":"249","text":"241"},{"range":"249","text":"242"},{"range":"250","text":"241"},{"range":"250","text":"242"},{"range":"251","text":"241"},{"range":"251","text":"242"},{"range":"252","text":"241"},{"range":"252","text":"242"},{"range":"253","text":"241"},{"range":"253","text":"242"},{"range":"254","text":"241"},{"range":"254","text":"242"},{"range":"255","text":"241"},{"range":"255","text":"242"},{"range":"256","text":"241"},{"range":"256","text":"242"},[3538,3541],"unknown","never",[3549,3552],[4153,4156],[2487,2490],[2526,2529],[2567,2570],[5054,5057],[12743,12746],[12755,12758],[12770,12773],[15316,15319],[16807,16810],[3502,3505],[4876,4879],[20188,20191]]